{"version":3,"sources":["js/angular/app.js","js/angular/services/validate.js","js/angular/services/services.js","js/angular/services/djangoAuth.js","js/angular/controllers/authControllers.js","js/angular/controllers/articleControllers.js","js/angular/controllers/appControllers.js","includes/tag_form.js","includes/tag_base.js","includes/login_modal.js","includes/delete_modal.js","includes/article_form.js","includes/article_base.js","auth/verifyemail.js","auth/userprofile.js","auth/signup.js","auth/passwordresetconfirm.js","auth/passwordreset.js","auth/login.js","articles.js"],"names":["cross","angular","module","config","$resourceProvider","defaults","stripTrailingSlashes","$routeProvider","when","templateUrl","controller","resolve","authenticated","djangoAuth","authenticationStatus","otherwise","redirectTo","service","message","minlength","maxlength","email","required","more_messages","demo","check_more_messages","name","error","this","validation_messages","field","form","error_bin","messages","e","$error","special_message","push","deduped_messages","forEach","el","i","indexOf","form_validation","substr","crossServices","factory","baseUrl","$resource","BaseUrl","query","method","params","articleID","isArray","queryTagged","queryNoData","update","tagID","save","tagTypeID","$q","$http","$cookies","$rootScope","API_URL","use_session","authPromise","request","args","get","headers","common","Authorization","deferred","defer","url","data","withCredentials","toUpperCase","X-CSRFToken","csrftoken","Access-Control-Allow-Credentials","success","bind","status","console","log","non_field_errors","reject","promise","register","username","password1","password2","more","extend","login","password","then","expires","Date","setDate","getDate","key","put","$broadcast","logout","remove","changePassword","new_password1","new_password2","resetPassword","profile","foobar","getTime","updateProfile","verify","confirmReset","uid","token","restrict","force","da","getAuthStatus","initialize","sessions","$scope","model","getObject","$","user","Validate","formData","errors","$invalid","complete","$location","path","$routeParams","emailVerificationToken","failure","firstToken","passwordResetToken","Article","Meta","cookie","articles","taggedArticles","noDataArticles","response","companies","company","categories","ethicssubcategory","deleteModal","removeFromList","item","list","index","some","elem","id","splice","loginModal","ifAuthenticated","loggedInAction","modal","tagForm","articleTemplate","state","addTag","msg","cancel","articleSubmit","tempArticle","csrfmiddlewaretoken","article","JSON","stringify","readyForm","toggleAddTag","articleDelete","flipBack","tagCancel","articleForm","title","notes","modalContent","label","kind","itemDelete","element","array","crossList","removeClass","mTag","noData","tag_type","d","noDataRestore","metatags","eTag","buttons","tagUrl","tagEdit","newTag","tag","grep","v","category","subcategory","tagTypes","tag_types","tagDelete","tagSubmit","excerpt","value","undefined","ethicstags","length","eType","tagFormState","addTagType","newTagType","showNewTagType","$event","preventDefault","stopPropagation","submitTagType","respone","loadFacts","goToLogin","goToSignUp","first_name","last_name","putObject","$on","ev","current","previous","rejection","replace","run","$templateCache"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n\nvar cross = angular.module('cross', [\n  'crossServices',\n  'ngRoute',\n  'ngCookies',\n  'ngSanitize',\n  'ngResource'\n]);\n\ncross.config(['$resourceProvider',function($resourceProvider) {\n  $resourceProvider.defaults.stripTrailingSlashes = false;\n}]);\n\ncross.config(['$routeProvider',\n  function($routeProvider) { \n    $routeProvider.\n      when('/', {\n        templateUrl: 'templates/articles.html',\n        controller: 'ArticleCtrl',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            // MAKE TRUE FOR PRODUCTION\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/login', {\n        templateUrl: 'templates/auth/login.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/userProfile', {\n        templateUrl: 'templates/auth/userprofile.html',\n        controller: 'ProfilePageCtrl',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            // MAKE TRUE FOR PRODUCTION\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/signUp', {\n        templateUrl: 'templates/auth/signup.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            // MAKE TRUE FOR PRODUCTION\n            return djangoAuth.authenticationStatus();\n          }]\n        }\n      })\n      .when('/verifyEmail/:emailVerificationToken', {\n        templateUrl: 'templates/auth/verifyemail.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/passwordReset', {\n        templateUrl: 'templates/auth/passwordreset.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/passwordResetConfirm/:firstToken/:passwordResetToken', {\n        templateUrl: 'templates/auth/passwordresetconfirm.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n}]);","'use strict';\n\nangular.module('cross')\n  .service('Validate', [function Validate() {\n    return {\n        'message': {\n            'minlength': 'This value is not long enough.',\n            'maxlength': 'This value is too long.',\n            'email': 'A properly formatted email address is required.',\n            'required': 'This field is required.'\n        },\n        'more_messages': {\n            'demo': {\n                'required': 'Here is a sample alternative required message.'\n            }\n        },\n        'check_more_messages': function(name,error){\n            return (this.more_messages[name] || [])[error] || null;\n        },\n        validation_messages: function(field,form,error_bin){\n            var messages = [];\n            for(var e in form[field].$error){\n                if(form[field].$error[e]){\n                    var special_message = this.check_more_messages(field,e);\n                    if(special_message){\n                        messages.push(special_message);\n                    }else if(this.message[e]){\n                        messages.push(this.message[e]);\n                    }else{\n                        messages.push(\"Error: \" + e);\n                    }\n                }\n            }\n            var deduped_messages = [];\n            angular.forEach(messages, function(el, i){\n                if(deduped_messages.indexOf(el) === -1) deduped_messages.push(el);\n            });\n            if(error_bin){\n                error_bin[field] = deduped_messages;\n            }\n        },\n        'form_validation': function(form,error_bin){\n            for(var field in form){\n                if(field.substr(0,1) != \"$\"){\n                    this.validation_messages(field,form,error_bin);\n                }\n            }\n        }\n    };\n}]);","var crossServices = angular.module('crossServices',['ngResource']);\n\n// use for setting the API endpoint location\ncrossServices.factory('BaseUrl', [function () {\n  var baseUrl = 'http://api.axiologue.org/'\n\n  return baseUrl;\n}]);\n\n// For making Article-related API calls\ncrossServices.factory('Article',['$resource', 'BaseUrl',\n  function ($resource, BaseUrl){\n    return $resource(BaseUrl + 'articles/articles/:articleID/', {}, {\n      query: {method:'GET', params:{articleID:'untagged'}, isArray:true},\n      queryTagged: {method:'GET', params:{articleID:'tagged'}, isArray:true},\n      queryNoData: {method:'GET', params:{articleID:'noData'}, isArray:true},\n      update: {method: 'PUT'}\n  });\n}]);\n\n// For making tag-related API calls\ncrossServices.factory('eTag',['$resource', 'BaseUrl',\n  function ($resource, BaseUrl) {\n    return $resource(BaseUrl + 'tags/etags/:tagID/',{},{\n      query: {method:'GET',params:{tagID:'list'},isArray:true},\n      update: {method: 'PUT'}\n    });\n}]);\n\n// For making meta-tag API calls\n// Currently only 'No Relevant Data' tags\ncrossServices.factory('mTag',['$resource', 'BaseUrl',\n    function ($resource, BaseUrl) {\n      return $resource(BaseUrl + 'tags/mtags/:tagID/');\n}]);\n\n// For getting company and ethics lists, used in form-making\ncrossServices.factory('Meta',['$resource', 'BaseUrl',\n  function ($resource, BaseUrl) {\n    return $resource(BaseUrl + 'tags/formMeta/',{},{\n      query: {method:'GET',params:{},isArray:true},\n    });\n}]);\n\n// For managing Tag Types\ncrossServices.factory('eType',['$resource', 'BaseUrl',\n  function ($resource, BaseUrl) {\n    return $resource(BaseUrl + 'tags/etypes/:tagTypeID/',{},{\n      save: {method:'POST',params:{tagTypeID:'new'}},\n    });\n}]);\n","'use strict';\n\nangular.module('cross')\n  .service('djangoAuth', [\n        '$q',\n        '$http',\n        '$cookies',\n        '$rootScope',\n        'BaseUrl',\n        function djangoAuth($q, $http, $cookies, $rootScope,BaseUrl) {\n    // AngularJS will instantiate a singleton by calling \"new\" on this function\n    var service = {\n        /* START CUSTOMIZATION HERE */\n        // Change this to point to your Django REST Auth API\n        // e.g. /api/rest-auth  (DO NOT INCLUDE ENDING SLASH)\n        'API_URL': BaseUrl + 'rest-auth',\n        // Set use_session to true to use Django sessions to store security token.\n        // Set use_session to false to store the security token locally and transmit it as a custom header.\n        'use_session': false,\n        /* END OF CUSTOMIZATION */\n        'authenticated': null,\n        'authPromise': null,\n        'request': function(args) {\n            // Let's retrieve the token from the cookie, if available\n            if($cookies.get('token')){\n                $http.defaults.headers.common.Authorization = 'Token ' + $cookies.get('token');\n            }\n            // Continue\n            params = args.params || {};\n            args = args || {};\n            var deferred = $q.defer(),\n                url = this.API_URL + args.url,\n                method = args.method || \"GET\",\n                params = params,\n                data = args.data || {};\n            // Fire the request, as configured.\n            $http({\n                url: url,\n                withCredentials: this.use_session,\n                method: method.toUpperCase(),\n                headers: {'X-CSRFToken': $cookies.csrftoken,\n                          'Access-Control-Allow-Credentials': 'true'},\n                params: params,\n                data: data\n            })\n            .success(angular.bind(this,function(data, status, headers, config) {\n                deferred.resolve(data, status);\n            }))\n            .error(angular.bind(this,function(data, status, headers, config) {\n                console.log(\"error syncing with: \" + url);\n                // Set request status\n                if(data){\n                    data.status = status;\n                }\n                if(status === 0){\n                    if(data === \"\"){\n                        data = {};\n                        data.status = 0;\n                        data.non_field_errors = [\"Could not connect. Please try again.\"];\n                    }\n                    // or if the data is null, then there was a timeout.\n                    if(data === null){\n                        // Inject a non field error alerting the user\n                        // that there's been a timeout error.\n                        data = {};\n                        data.status = 0;\n                        data.non_field_errors = [\"Server timed out. Please try again.\"];\n                    }\n                }\n                deferred.reject(data, status, headers, config);\n            }));\n            return deferred.promise;\n        },\n        'register': function(username,password1,password2,email,more){\n            var data = {\n                'username':username,\n                'password1':password1,\n                'password2':password2,\n                'email':email\n            };\n            data = angular.extend(data,more);\n            return this.request({\n                'method': \"POST\",\n                'url': \"/registration/\",\n                'data' :data\n            });\n        },\n        'login': function(username,password){\n            var djangoAuth = this;\n            return this.request({\n                'method': \"POST\",\n                'url': \"/login/\",\n                'data':{\n                    'username':username,\n                    'password':password,\n                }\n            }).then(function(data){\n                if(!djangoAuth.use_session){\n                    var expires = new Date();\n                    expires.setDate(expires.getDate() + 1);\n                    $http.defaults.headers.common.Authorization = 'Token ' + data.key;\n                    $cookies.put('token',data.key,{'expires':expires});\n                }\n                djangoAuth.authenticated = true;\n                $rootScope.$broadcast(\"djangoAuth.logged_in\", data);\n            });\n        },\n        'logout': function(){\n            var djangoAuth = this;\n            return this.request({\n                'method': \"POST\",\n                'url': \"/logout/\"\n            }).then(function(data){\n                delete $http.defaults.headers.common.Authorization;\n                $cookies.remove('token');\n                $cookies.remove('user')\n                djangoAuth.authenticated = false;\n                $rootScope.$broadcast(\"djangoAuth.logged_out\");\n            });\n        },\n        'changePassword': function(password1,password2){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/change/\",\n                'data':{\n                    'new_password1':password1,\n                    'new_password2':password2\n                }\n            });\n        },\n        'resetPassword': function(email){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/reset/\",\n                'data':{\n                    'email':email\n                }\n            });\n        },\n        'profile': function(){\n            return this.request({\n                'method': \"GET\",\n                'url': \"/user/\",\n                'params': { 'foobar': new Date().getTime() }\n            }); \n        },\n        'updateProfile': function(data){\n            return this.request({\n                'method': \"PATCH\",\n                'url': \"/user/\",\n                'data':data\n            }); \n        },\n        'verify': function(key){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/registration/verify-email/\",\n                'data': {'key': key} \n            });            \n        },\n        'confirmReset': function(uid,token,password1,password2){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/reset/confirm/\",\n                'data':{\n                    'uid': uid,\n                    'token': token,\n                    'new_password1':password1,\n                    'new_password2':password2\n                }\n            });\n        },\n        'authenticationStatus': function(restrict, force){\n            // Set restrict to true to reject the promise if not logged in\n            // Set to false or omit to resolve when status is known\n            // Set force to true to ignore stored value and query API\n            restrict = restrict || false;\n            force = force || false;\n            if(this.authPromise === null || force){\n                this.authPromise = this.request({\n                    'method': \"GET\",\n                    'url': \"/user/\"\n                });\n            }\n            var da = this;\n            var getAuthStatus = $q.defer();\n            if(this.authenticated !== null && !force){\n                // We have a stored value which means we can pass it back right away.\n                if(this.authenticated === false && restrict){\n                    getAuthStatus.reject(\"User is not logged in.\");\n                }else{\n                    getAuthStatus.resolve();\n                }\n            }else{\n                // There isn't a stored value, or we're forcing a request back to\n                // the API to get the authentication status.\n                this.authPromise.then(function(){\n                    da.authenticated = true;\n                    getAuthStatus.resolve();\n                },function(){\n                    da.authenticated = false;\n                    if(restrict){\n                        getAuthStatus.reject(\"User is not logged in.\");\n                    }else{\n                        getAuthStatus.resolve();\n                    }\n                });\n            }\n            return getAuthStatus.promise;\n        },\n        'initialize': function(url, sessions){\n            this.API_URL = url;\n            this.use_session = sessions;\n            return this.authenticationStatus();\n        }\n\n    };\n    return service;\n  }]);\n\n\n","angular.module('cross')\n.controller('ProfilePageCtrl',['$scope','$cookies',function ($scope,$cookies) {\n\n  $scope.model = $cookies.getObject('user') || $.extend({},$scope.user);\n}]);\n\n\nangular.module('cross')\n.controller('UserprofileCtrl', ['$scope','djangoAuth','Validate',function ($scope, djangoAuth, Validate) {\n    $scope.updateProfile = function(formData, model){\n      $scope.errors = [];\n\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.updateProfile(model)\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.error = data;\n        });\n      }\n    };\n  }]);\n\nangular.module('cross')\n.controller('LoginCtrl', ['$scope','$location','djangoAuth','Validate',function ($scope, $location, djangoAuth, Validate) {\n    $scope.login = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.login($scope.model.username, $scope.model.password)\n        .then(function(data){\n          // success case\n          $location.path(\"/\");\n        },function(data){\n          // error case\n          $scope.errors = data;\n        });\n      }\n    };\n  }]);\n\nangular.module('cross')\n.controller('PasswordchangeCtrl', ['$scope','djangoAuth','Validate',function ($scope, djangoAuth, Validate) {\n    $scope.model = {'new_password1':'','new_password2':''};\n    $scope.complete = false;\n    $scope.changePassword = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.changePassword($scope.model.new_password1, $scope.model.new_password2)\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.errors = data;\n        });\n      }\n    };\n  }]);\n\n\nangular.module('cross')\n.controller('RegisterCtrl', ['$scope','djangoAuth','Validate',function ($scope, djangoAuth, Validate) {\n    $scope.model = {'email':'','password':''};\n    $scope.complete = false;\n    $scope.register = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.register(\n            $scope.model.username,\n            $scope.model.password1,\n            $scope.model.password2,\n            $scope.model.email\n        )\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.errors = data;\n        });\n      }\n    }\n  }]);\n\nangular.module('cross')\n.controller('VerifyemailCtrl', ['$scope','$routeParams','djangoAuth',function ($scope, $routeParams, djangoAuth) {\n    djangoAuth.verify($routeParams.emailVerificationToken).then(function(data){\n      $scope.success = true;\n    },function(data){\n      $scope.failure = false;\n    });\n  }]);\n\nangular.module('cross')\n.controller('PasswordresetCtrl', ['$scope','djangoAuth','Validate',function ($scope, djangoAuth, Validate) {\n    $scope.model = {'email':''};\n    $scope.complete = false;\n    $scope.resetPassword = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.resetPassword($scope.model.email)\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.errors = data;\n        });\n      }\n    };\n  }]);\n\nangular.module('cross')\n.controller('UserprofileCtrl', ['$scope','djangoAuth','Validate',function ($scope, djangoAuth, Validate) {\n    $scope.complete = false;\n    $scope.updateProfile = function(formData, model){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.updateProfile(model)\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.error = data;\n        });\n      }\n    };\n  }]);\n\nangular.module('cross')\n.controller('PasswordresetconfirmCtrl', ['$scope','$routeParams','djangoAuth','Validate',function ($scope, $routeParams, djangoAuth, Validate) {\n    $scope.model = {'new_password1':'','new_password2':''};\n    $scope.complete = false;\n    $scope.confirmReset = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.confirmReset($routeParams.firstToken, $routeParams.passwordResetToken, $scope.model.new_password1, $scope.model.new_password2)\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.errors = data;\n        });\n      }\n    };\n  }]);\n","angular.module('cross')\n.controller('ArticleCtrl',['$scope','$http','Article','Meta',function ($scope,$http,Article,Meta) {\n  $scope.csrftoken = $.cookie('csrftoken');\n  $scope.articles = Article.query();\n  $scope.taggedArticles = Article.queryTagged();\n  $scope.noDataArticles = Article.queryNoData();\n\n  Meta.query(function (data, response) {\n    $scope.companies = data[0].company;\n    $scope.categories = data[1].ethicssubcategory;\n  });\n\n  $scope.deleteModal = 'templates/includes/delete_modal.html';\n\n  $scope.removeFromList = function (item, list) {\n    var index = 0;\n      list.some(function(elem, i) {\n        if (elem.id === item.id) {\n          index = i;\n          return true;\n        }\n      });\n      list.splice(index,1);\n  };\n\n  $scope.loginModal = 'templates/includes/login_modal.html';\n\n  // Function for button actions that can only occur when logged in\n  // if Logged in, performs the action (passed in as a function)\n  // if not logged in, it triggers the login modal\n  $scope.ifAuthenticated = function (loggedInAction) {\n    return function () {\n      if($scope.authenticated) {\n        loggedInAction();\n      } else {\n        $('#login_modal').modal('toggle');\n      }\n    };\n  };\n}]);\n\n\n\nangular.module('cross')\n.controller('SingleArticleCtrl',['$scope', 'Article',function ($scope, Article) {\n\n  $scope.tagForm = 'templates/includes/tag_form.html';\n  $scope.articleTemplate = 'templates/includes/article_base.html';\n  $scope.state = {addTag:false};\n  $scope.error = {\n    error: false,\n    msg: \"\"\n  };\n  $scope.cancel = true;\n\n  $scope.articleSubmit = function () {\n    $scope.tempArticle.csrfmiddlewaretoken = $scope.csrftoken;\n\n    Article.update({articleID: $scope.article.id},$scope.tempArticle,function () {\n      $scope.articleTemplate = 'templates/includes/article_base.html';\n      $scope.article = $.extend({},$scope.tempArticle);\n    },function (response) {\n      $scope.error.msg = JSON.stringify(response.data);\n      $scope.error.error = true;\n    });\n  };\n\n  // if Logged in, opens the article edit form and populates it with the current article info\n  $scope.readyForm = $scope.ifAuthenticated(function () {\n        $scope.tempArticle = $.extend({},$scope.article);\n        $scope.articleTemplate = 'templates/includes/article_form.html';\n  });\n\n  // if logged in, opens the add tag form\n  $scope.toggleAddTag = $scope.ifAuthenticated(function () {\n    $scope.state.addTag = !$scope.state.addTag;\n  });\n\n  // if logged in, opens the delete article modal\n  $scope.articleDelete = $scope.ifAuthenticated(function () {\n    $('#modal-article-' + $scope.article.id).modal('toggle');\n  });\n\n  $scope.flipBack = function () {\n    $scope.articleTemplate='templates/includes/article_base.html';\n  }; \n\n  $scope.tagCancel = function () {\n    $scope.state.addTag = false;\n  };\n\n}]);\n\nangular.module('cross')\n.controller('NewArticleCtrl',['$scope','Article',function ($scope, Article) {\n  $scope.articleForm = 'templates/includes/article_form.html';\n  $scope.error = {error: false,\n                  msg: \"\"};\n  $scope.success = {success: false,\n                    msg: \"Your article has been sucessfully submitted\"};\n\n  $scope.tempArticle = {\n    id: 0,\n    url: \"\",\n    title: \"\",\n    notes: \"\"\n  };\n\n  $scope.articleSubmit = $scope.ifAuthenticated(function () {\n    $scope.tempArticle.csrfmiddlewaretoken = $scope.csrftoken;\n\n    Article.save({articleID:'new'},$scope.tempArticle,function (data, response) {\n      $scope.articles.push(data);\n      $scope.tempArticle = {\n        id: 0,\n        url: \"\",\n        title: \"\",\n        notes: \"\"\n      };\n      $scope.error.error = false;\n      $scope.success.success = true;\n    },function (response) {\n      $scope.error.msg = JSON.stringify(response.data);\n      $scope.error.error = true;\n      $scope.success.success = false;\n    });\n  });\n\n\n}]);\n\nangular.module('cross')\n.controller('ArticleDeleteCtrl',['$scope','Article',function ($scope,Article) {\n  $scope.modalContent = {\n    id: 'modal-article-' + $scope.article.id,\n    label: 'modalLabel-article-' + $scope.article.id,\n    kind: 'Article',\n    title: $scope.article.title,\n    msg: 'This will not only remove the article, but any associated tags as well.  This cannot be undone'\n  };\n\n  $scope.itemDelete = function () {\n    $scope.article.csrfmiddlewaretoken = $scope.csrftoken;\n\n    Article.delete({articleID: $scope.article.id},function () {\n      if ($scope.articles.some(function (element, index, array) { return element.id === $scope.article.id; })) {\n        $scope.removeFromList($scope.article,$scope.articles);\n      } else {\n        $scope.removeFromList($scope.article,$scope.crossList);\n      }\n      \n      // Code to programmatically dismiss Bootstrap modal overlay\n      $('myModal' + $scope.article.id).modal('toggle');\n      $('body').removeClass('modal-open');\n      $('.modal-backdrop').remove();\n    });\n  };\n}]);\n\n// Controller for tagging articles as having no relevant data\nangular.module('cross')\n.controller('ArticleNoDataCtrl',['$scope','mTag',function ($scope, mTag) {\n  \n  $scope.noData = function () {\n    var data = {'article': $scope.article.id, 'tag_type': 1};\n\n    mTag.save({tagID:'new'},data,function (d, response) {\n      $scope.noDataArticles.push($scope.article);\n\n      $scope.removeFromList($scope.article,$scope.articles);\n    }, function (response) {\n      console.log('error.  Check network tab');\n    });\n  };\n    \n}]);\n\nangular.module('cross')\n.controller('ArticleRestoreCtrl',['$scope','mTag',function ($scope, mTag) {\n\n  $scope.noDataRestore = function () {\n    mTag.delete({tagID: $scope.article.metatags[0]},function () {\n      // remove metatags from article\n      delete $scope.article.metatags;\n\n      // add the article to the untagged article list\n      $scope.articles.push($scope.article);\n\n      // remove the article from the No Relevant Data list\n      $scope.removeFromList($scope.article,$scope.noDataArticles);\n    }, function (response) {\n      console.log('error.  Check network tab');\n    });\n  };\n}]);\n    \n\nangular.module('cross')\n.controller('SingleTagCtrl',['$scope','eTag',function ($scope,eTag) {\n  $scope.buttons = false;\n  $scope.tagUrl = 'templates/includes/tag_base.html';\n\n  $scope.tagEdit = $scope.ifAuthenticated(function () {\n    \n    $scope.tagUrl = 'templates/includes/tag_form.html';\n\n    // Get company and category ids\n    $scope.newTag = $.extend({},$scope.tag);\n    $scope.newTag.company = $.grep($scope.companies,function(v) {return v.name === $scope.newTag.company;})[0].id;\n    var category = $.grep($scope.categories,function(v) {return v.name === $scope.newTag.tag_type.subcategory;})[0];\n    $scope.newTag.subcategory = category.id;\n\n    // Add the appropriate tagTypes for that category\n    $scope.tagTypes = category.tag_types;\n    $scope.newTag.tag_type = $scope.tag.tag_type.id;\n  });\n\n  $scope.tagDelete = $scope.ifAuthenticated(function () {\n    $('#modal-tag-' + $scope.article.id + '-' + $scope.tag.id).modal('toggle');\n  });\n\n  $scope.tagCancel = function () {\n    \n    $scope.tagUrl = 'templates/includes/tag_base.html';\n\n  };\n\n  $scope.tagSubmit = function () {\n    $scope.newTag.article = $scope.article.id;\n\n    eTag.update({tagID:$scope.tag.id},$scope.newTag,function (data, response) {\n\n      // Replace element IDs with actual names\n      data.company = $.grep($scope.companies,function(v) {return v.id === data.company;})[0].name;\n      var category = $.grep($scope.categories,function(v) {return v.id === $scope.newTag.subcategory;})[0];\n\n      data.tag_type = {\n        name: $.grep(category.tag_types, function(v) {return v.id === data.tag_type;})[0].name,\n        subcategory: category.name,\n        id: data.tag_type\n      };\n\n      $scope.tag = $.extend({},data);\n      $scope.error.error = false;\n\n      $scope.tagUrl = 'templates/includes/tag_base.html';\n\n    }, function (response) {\n      $scope.error.msg = JSON.stringify(response.data);\n      $scope.error.error = true;\n    });\n  };\n\n}]);\n\nangular.module('cross')\n.controller('NewTagCtrl',['$scope','eTag',function ($scope,eTag) {\n  $scope.newTag = {\n    company: \"\",\n    subcategory: \"\",\n    tag_type: \"\",\n    excerpt: \"\",\n    value: undefined,\n    article: $scope.article.id\n  };\n\n  $scope.tagSubmit = function () {\n    $scope.newTag.csrfmiddlewaretoken = $scope.csrftoken;\n\n    eTag.save({tagID: 'new'},$scope.newTag,function (data,response) {\n      $scope.article.ethicstags = $scope.article.ethicstags || [];\n\n      // Replace element IDs with actual names\n      data.company = $.grep($scope.companies,function(v) {return v.id === data.company;})[0].name;\n      var category = $.grep($scope.categories,function(v) {return v.id === $scope.newTag.subcategory;})[0];\n\n      data.tag_type = {\n        name: $.grep(category.tag_types, function(v) {return v.id === data.tag_type;})[0].name,\n        subcategory: category.name,\n        id: data.tag_type\n      };\n\n      $scope.article.ethicstags.push(data);\n      $scope.state.addTag = false;\n      $scope.error.error = false;\n\n      //if the article is in the Unanalyzed list, move it to the analyzed list\n      if($scope.article.ethicstags.length === 1) {\n        $scope.taggedArticles.push($scope.article);\n        $scope.removeFromList($scope.article,$scope.articles);\n      }\n\n      // Reset the newTag to blank, in case you want to add more tags\n      $scope.newTag = {\n        company: \"\",\n        subcategory: \"\",\n        tag_type: \"\",\n        excerpt: \"\",\n        value: undefined,\n        article: $scope.article.id\n      };\n    },function (response) {\n      $scope.error.msg = JSON.stringify(response.data);\n      $scope.error.error = true;\n    });   \n  };\n\n  \n\n}]);\n\nangular.module('cross')\n.controller('TagFormCtrl',['$scope','eType',function ($scope,eType) {\n  $scope.tagFormState = {\n    addTagType: false\n  };\n\n  $scope.newTagType = {\n    name: ''\n  };\n\n  // Shows the form to add new Tag Type\n  $scope.showNewTagType = function ($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n\n    $scope.tagFormState.addTagType = !$scope.tagFormState.addTagType;\n  };\n\n  // Submit a New Tag Type\n  $scope.submitTagType = function ($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n\n    // Get the currently selected subcategory\n    $scope.newTagType.subcategory = $scope.newTag.subcategory;\n\n    // Send the new TagType to server\n    eType.save($scope.newTagType,function (data, respone) {\n\n      // Get index of current subcategory\n      var index = 0;\n      $scope.categories.some(function(elem, i) {\n        if (elem.id === $scope.newTag.subcategory) {\n          index = i;\n          return true;\n        }\n      });\n\n      // Add the new Tag Type to the current category list\n      $scope.categories[index].tag_types.push(data);\n\n      // Set the form to the new TagTpe\n      $scope.newTag.tag_type = data.id;\n\n      // Reset the add Tag Type form to invisible\n      $scope.tagFormState.addTagType = false;\n    },function (response) {\n      console.log(response.data);\n      $scope.error.msg = JSON.stringify(response.data);\n      $scope.error.error = true;\n    });\n  };\n\n  // Switches to the appropriate set of TagTypes when an ethical category is selected\n  $scope.loadFacts = function () {\n    $scope.tagTypes = $.grep($scope.categories,function(v) {return v.id === $scope.newTag.subcategory;})[0].tag_types;\n  };\n\n}]);\n\nangular.module('cross')\n.controller('DeleteTagCtrl',['$scope','eTag',function ($scope,eTag) {\n  $scope.modalContent = {\n    id: 'modal-tag-' + $scope.article.id + '-' + $scope.tag.id,\n    label: 'modalLabel-cross-' + $scope.article.id + '-' + $scope.tag.id,\n    kind: 'Tag',\n    title: $scope.tag.tag_type.name + \" on \" + $scope.article.title,\n    msg: 'This cannot be undone'\n  };\n\n  $scope.itemDelete = function () {\n\n    eTag.delete({tagID:$scope.tag.id}, function (data,response) {\n      $scope.removeFromList($scope.tag,$scope.article.ethicstags);\n      if ($scope.article.ethicstags.length === 0) {\n        $scope.removeFromList($scope.article,$scope.taggedArticles);\n        $scope.articles.push($scope.article);\n      }\n\n      $('myModal' + $scope.article.id).modal('toggle');\n      $('body').removeClass('modal-open');\n      $('.modal-backdrop').remove();\n    });\n  };\n}]);\n\nangular.module('cross')\n.controller('LoginModalCtrl',['$scope','$location',function ($scope,$location) {\n  $scope.goToLogin = function () {\n    $location.path('/login'); \n    $('body').removeClass('modal-open');\n    $('.modal-backdrop').remove();\n  };\n\n  $scope.goToSignUp = function() {\n    $location.path('/signUp');\n    $('body').removeClass('modal-open');\n    $('.modal-backdrop').remove();\n  };\n}]);\n","'use strict';\n\nangular.module('cross')\n.controller('BodyCtrl',['$scope','djangoAuth','$location','$cookies',function ($scope,djangoAuth,$location,$cookies) {\n  // Variable to hold the cookie expiration date, which is currently set to one day\n  var expires = {};\n\n\n  // Assume user is not logged in until we hear otherwise\n  $scope.authenticated = false;\n  // Wait for the status of authentication, set scope var to true if it resolves\n  $scope.user = {'username':'','first_name':'','last_name':'','email':''};\n\n  // Wait for the status of authentication, set scope var to true if it resolves\n    djangoAuth.authenticationStatus(true).then(function(){\n        $scope.authenticated = true;\n        djangoAuth.profile().then(function(data){\n          expires = new Date();\n          expires.setDate(expires.getDate() + 14);\n\n          $scope.user = data;\n          $cookies.putObject('user',data,{'expires':expires});\n        });\n    });\n\n    // Wait and respond to the logout event.\n    $scope.$on('djangoAuth.logged_out', function(data) {\n      $scope.authenticated = false;\n      $scope.user = {'username':'','first_name':'','last_name':'','email':''};\n    });\n    // Wait and respond to the log in event.\n    $scope.$on('djangoAuth.logged_in', function(data) {\n      $scope.authenticated = true;\n\n      djangoAuth.profile().then(function(data) {\n        expires = new Date();\n        expires.setDate(expires.getDate() + 14);\n\n        $scope.user = data;\n        $cookies.putObject('user',data,{'expires':expires});\n      });\n    });\n\n    // If the user attempts to access a restricted page, redirect them back to the main page.\n    $scope.$on('$routeChangeError', function(ev, current, previous, rejection){\n      console.error(\"Unable to change routes.  Error: \", rejection);\n      $location.path('/login').replace();\n    });\n\n    $scope.logout = function(){\n      djangoAuth.logout();\n    };\n\n}]);\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/includes/tag_form.html',\n    '<div class=\"col-xs-12 listitem\" ng-controller=\"TagFormCtrl\"><h3 class=\"text-danger\" ng-show=\"error.error\">{{error.msg}}</h3><form ng-submit=\"tagSubmit()\"><div class=\"form-group\"><label for=\"{{\\'companies\\' + article.id}}\">COMPANY:</label><select ng-model=\"newTag.company\" class=\"form-control\" ng-options=\"company.id as company.name for company in companies\"><option value=\"\">---- Select Company ----</option></select></div><div class=\"form-group\"><label for=\"{{\\'companies\\' + article.id}}\">CATEGORY:</label><select ng-model=\"newTag.subcategory\" class=\"form-control\" ng-options=\"category.id as category.name group by category.category for category in categories\" ng-change=\"loadFacts()\"><option value=\"\">---- Select Ethics Category ----</option></select></div><div class=\"form-group\"><label for=\"{{\\'companies\\' + article.id}}\">TAG TYPE:</label><select ng-model=\"newTag.tag_type\" class=\"form-control\" ng-options=\"tagType.id as tagType.name for tagType in tagTypes\"><option value=\"\">---- Select Tag Type ----</option></select><p class=\"help-block\">Don\\'t see the tag you want? <a ng-click=\"showNewTagType($event)\">Add it!</a></p></div><div class=\"form-group\" ng-show=\"tagFormState.addTagType\"><label for=\"{{\\'newTagType\\' + article.id}}\">NEW TAG TYPE:</label><input ng-model=\"newTagType.name\" class=\"form-control\" placeholder=\"Enter Your New Tag Here\"> <button class=\"btn btn-edit btn-block\" ng-click=\"submitTagType($event)\">Add Tag Type</button></div><div class=\"form-group\" ng-show=\"newTag.tag_type\"><label for=\"{{\\'NewTagValue\\' + article.id}}\">VALUE (Only for relevant tags):</label><input ng-model=\"newTag.value\" class=\"form-control\" placeholder=\"Enter amount for tag modifier\"></div><div class=\"form-group\"><label for=\"{{\\'crossNotes\\' + article.id}}\">EXCERPT:</label><textarea rows=\"3\" ng-model=\"newTag.excerpt\" name=\"notes\" id=\"{{\\'excerpt\\' + article.id}}\" class=\"form-control\"></textarea></div><input type=\"submit\" class=\"btn btn-primary btn-block\" value=\"Submit\"></form><button class=\"btn btn-delete btn-block\" ng-click=\"tagCancel()\">Cancel</button></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/includes/tag_base.html',\n    '<div class=\"col-xs-12 col-sm-10\"><dl><dt>{{tag.tag_type.name}}<span class=\"score\" ng-show=\"tag.value\">: {{tag.value}}</span></dt><dd>{{tag.company}} {{tag.product}} (category: {{tag.tag_type.subcategory}})</dd><dd><span class=\"text-muted\">\"{{tag.excerpt}}\"</span></dd></dl></div><div class=\"col-xs-12 col-sm-2 tagButtons\" ng-show=\"buttons\"><button class=\"btn btn-sm btn-edit\" ng-click=\"tagEdit()\">Edit</button> <button class=\"btn btn-sm btn-delete\" ng-click=\"tagDelete()\">Delete</button></div><div ng-include=\"deleteModal\" ng-controller=\"DeleteTagCtrl\"></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/includes/login_modal.html',\n    '<div id=\"login_modal\" class=\"modal fade\" tab-index=\"-1\" role=\"dialog\" aria-labelledby=\"login_modal_content\" ng-controller=\"LoginModalCtrl\"><div class=\"modal-dialog\" role=\"document\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"close\"><span aria-hidden=\"true\">&times;</span></button><h4 class=\"modal-title\" id=\"login_modal_content\">You must log in to to do that!</h4></div><div class=\"modal-body text-center\"><button ng-click=\"goToLogin()\" class=\"btn btn-block btn-primary\">Login</button><p>or</p><button ng-click=\"goToSignUp()\" class=\"btn btn-block btn-success\">Sign Up</button></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/includes/delete_modal.html',\n    '<div id=\"{{modalContent.id}}\" class=\"modal fade\" tab-index=\"-1\" role=\"dialog\" aria-labelledby=\"{{\\'#\\' + modalContent.label}}\"><div class=\"modal-dialog\" role=\"document\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><h4 class=\"modal-title\" id=\"{{modalContent.label}}\">Delete {{modalContent.kind}}?</h4></div><div class=\"modal-body\"><p>Are you sure you want to delete the {{modalContent.kind.toLowerCase()}} <em>{{modalContent.title}}</em></p><p>{{modalContent.msg}}</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button> <button type=\"button\" class=\"btn btn-primary\" ng-click=\"itemDelete()\">Delete</button></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/includes/article_form.html',\n    '<div class=\"listitem\"><h3 class=\"text-danger\" ng-show=\"error.error\">{{error.msg}}</h3><h3 class=\"text-success\" ng-show=\"success.success\">{{success.msg}}</h3><form ng-submit=\"articleSubmit()\"><div class=\"form-group\"><label for=\"{{\\'title\\' + article.id}}\">TITLE:</label><input type=\"text\" id=\"{{\\'title\\' + article.id}}\" ng-model=\"tempArticle.title\" name=\"title\" class=\"form-control\"></div><div class=\"form-group\"><label for=\"{{\\'url\\' + article.id}}\">URL:</label><input type=\"text\" id=\"{{\\'url\\' + article.id}}\" ng-model=\"tempArticle.url\" name=\"url\" class=\"form-control\"></div><div class=\"form-group\"><label for=\"{{\\'notes\\' + article.id}}\">NOTES:</label><textarea rows=\"3\" ng-model=\"tempArticle.notes\" name=\"notes\" id=\"{{\\'notes\\' + article.id}}\" class=\"form-control\"></textarea></div><input type=\"submit\" class=\"btn btn-primary btn-block\" value=\"Submit\"></form><button class=\"btn btn-delete btn-block\" ng-click=\"flipBack()\" ng-show=\"cancel\">Cancel</button></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/includes/article_base.html',\n    '<div class=\"col-xs-12 col-sm-10\"><ul><li><h3>{{article.title}}</h3></li><li><a href=\"{{article.url}}\" target=\"_newtab\">{{article.url}}</a></li><li>{{article.notes}}</li></ul></div><div class=\"col-sm-2 col-xs-12 text-center\"><button class=\"btn btn-block btn-add_analysis\" ng-click=\"toggleAddTag()\">Add Tag</button> <button class=\"btn btn-block btn-edit\" ng-click=\"readyForm()\">Edit</button> <button class=\"btn btn-block btn-delete\" ng-click=\"articleDelete()\">Delete</button></div><div ng-include=\"deleteModal\" ng-controller=\"ArticleDeleteCtrl\"></div><div ng-include=\"tagForm\" ng-controller=\"NewTagCtrl\" ng-show=\"state.addTag\"></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/verifyemail.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"verifyEmail_view\" ng-controller=\"VerifyemailCtrl\"><div ng-if=\"success\" class=\"alert alert-success\">You have successfully verified your email address.</div><div ng-if=\"failure\" class=\"alert alert-warning\">Sorry, there\\'s been an error.</div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/userprofile.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><h2 class=\"light-header\">Edit Profile Information</h2><div id=\"userProfile_view\" ng-controller=\"UserprofileCtrl\"><div ng-if=\"complete == false\"><form role=\"form\" ng-if=\"authenticated\" name=\"userProfileForm\" ng-submit=\"updateProfile(userProfileForm, model)\" novalidate><div class=\"form-group\"><label for=\"id_first_name\">First Name</label><input name=\"first_name\" id=\"id_first_name\" class=\"form-control\" type=\"text\" ng-model=\"model.first_name\" placeholder=\"First Name\"></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.first_name\">{{error}}</div><div class=\"form-group\"><label for=\"id_last_name\">Last Name</label><input name=\"last_name\" id=\"id_last_name\" class=\"form-control\" type=\"text\" ng-model=\"model.last_name\" placeholder=\"Last Name\"></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.last_name\">{{error}}</div><div class=\"form-group\"><label for=\"id_email\">Email</label><input name=\"email\" id=\"id_email\" class=\"form-control\" type=\"email\" ng-model=\"model.email\" placeholder=\"Email\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><button type=\"submit\" ng-show=\"authenticated\" class=\"btn btn-primary\">Update Profile</button></form><div class=\"alert alert-warning\" ng-if=\"authenticated == false\">You need to be logged in to do this.</div></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">You have updated your profile.</div></div></div><div id=\"passwordChange_view\" ng-controller=\"PasswordchangeCtrl\"><h2 class=\"light-header\">Change Password</h2><div ng-if=\"complete == false\"><form role=\"form\" ng-submit=\"changePassword(changePasswordForm)\" name=\"changePasswordForm\" ng-if=\"authenticated\" novalidate><div class=\"form-group\"><label for=\"id_password1\">New Password</label><input name=\"new_password1\" id=\"id_password1\" type=\"password\" ng-model=\"model.new_password1\" placeholder=\"New Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.new_password1\">{{error}}</div><div class=\"form-group\"><label for=\"id_password2\">Repeat Password</label><input name=\"new_password2\" id=\"id_password2\" type=\"password\" ng-model=\"model.new_password2\" placeholder=\"Repeat Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.new_password2\">{{error}}</div><button ng-show=\"authenticated\" type=\"submit\" class=\"btn btn-primary\">Change Password</button></form><div class=\"alert alert-warning\" ng-if=\"authenticated != true\">You need to be logged in to do this!</div></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">You have changed your password.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/signup.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"register_view\" ng-controller=\"RegisterCtrl\"><div ng-if=\"complete == false\"><h3 class=\"light-header\">Please Enter Your Registration Information:</h3><form role=\"form\" ng-if=\"authenticated != true\" name=\"registerForm\" ng-submit=\"register(registerForm)\" novalidate><div class=\"form-group\"><label class=\"sr-only\" for=\"id_first_name\">First Name (optional)</label><input name=\"first_name\" id=\"id_first_name\" class=\"form-control\" type=\"first_name\" ng-model=\"model.first_name\" placeholder=\"First Name\" required></div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_last_name\">Last Name (optional)</label><input name=\"last_name\" id=\"id_last_name\" class=\"form-control\" type=\"last_name\" ng-model=\"model.last_name\" placeholder=\"Last Name\" required></div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_username\">Username</label><input name=\"username\" id=\"id_username\" class=\"form-control\" type=\"username\" ng-model=\"model.username\" placeholder=\"Username\" required></div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_email\">Email</label><input name=\"email\" id=\"id_email\" class=\"form-control\" type=\"email\" ng-model=\"model.email\" placeholder=\"Email\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><hr><div class=\"form-group\"><label class=\"sr-only\" for=\"id_password\">Password</label><input name=\"password1\" id=\"id_password1\" class=\"form-control\" type=\"password\" ng-model=\"model.password1\" placeholder=\"Password\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password1\">{{error}}</div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_password\">Repeat Password</label><input name=\"password\" id=\"id_password2\" class=\"form-control\" type=\"password\" ng-model=\"model.password2\" placeholder=\"Repeat Password\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password2\">{{error}}</div><button ng-hide=\"authenticated\" type=\"submit\" class=\"btn btn-block btn-auth-orange\">Sign Up!</button></form><p ng-if=\"authenticated\">You are already logged in! You don\\'t need to register.</p></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">Great! You\\'ve just registered. You should receive an email shortly with instructions on how to activate your account.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/passwordresetconfirm.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"passwordResetConfirm_view\" ng-controller=\"PasswordresetconfirmCtrl\"><div ng-hide=\"complete\"><form role=\"form\" ng-hide=\"authenticated\" ng-submit=\"confirmReset(confirmResetForm)\" name=\"confirmResetForm\" novalidate><div class=\"form-group\"><label for=\"id_password1\">New Password</label><input name=\"password1\" id=\"id_password1\" type=\"password\" ng-model=\"model.new_password1\" placeholder=\"New Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password1\">{{error}}</div><div class=\"form-group\"><label for=\"id_password2\">Repeat Password</label><input name=\"password2\" id=\"id_password2\" type=\"password\" ng-model=\"model.new_password2\" placeholder=\"Repeat Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password2\">{{error}}</div><button type=\"submit\" ng-hide=\"authenticated\" class=\"btn btn-primary\">Reset Password</button></form><p ng-show=\"authenticated\">You are already logged in! You don\\'t need to reset your password.</p></div><div ng-show=\"complete\"><div class=\"alert alert-success\">You have changed your password.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/passwordreset.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"passwordReset_view\" ng-controller=\"PasswordresetCtrl\"><div ng-if=\"complete == false\"><form role=\"form\" ng-if=\"authenticated != true\" name=\"passwordResetForm\" ng-submit=\"resetPassword(passwordResetForm)\" novalidate><div class=\"form-group\"><label for=\"id_email\">Email</label><input name=\"email\" id=\"id_email\" type=\"text\" ng-model=\"model.email\" placeholder=\"Email\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><button ng-hide=\"authenticated\" type=\"submit\" class=\"btn btn-primary\">Reset Password</button></form><p ng-if=\"authenticated\">You are already logged in! You don\\'t need to reset your password.</p></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">You should receive an email shortly with instructions on how to reset your account password.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/login.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\">\\'<div id=\"login_view\" ng-controller=\"LoginCtrl\"><h4 class=\"light-header\">Please Log In</h4><form role=\"form\" ng-submit=\"login(loginForm)\" name=\"loginForm\" novalidate><div class=\"form-group\"><label class=\"sr-only\" for=\"id_username\">Username</label><input name=\"username\" id=\"id_username\" type=\"text\" ng-model=\"model.username\" placeholder=\"Username\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_password\">Password</label><input name=\"password\" id=\"id_password\" type=\"password\" ng-model=\"model.password\" placeholder=\"Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.username\">{{error}}</div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password\">{{error}}</div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.non_field_errors\">{{error}}</div><div class=\"alert alert-danger\" ng-if=\"error\">{{error}}</div><p><button type=\"submit\" class=\"btn btn-block btn-succes\">Submit</button></p></form><div><p>Forgot your password? Click <a href=\"#/passwordReset\">here</a></p></div></div><hr><h4>Don\\'t have an Axiologue account? Sign up below!</h4><a href=\"#/signUp\" class=\"btn btn-block btn-primary\">Sign Up</a></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/articles.html',\n    '<div class=\"container\" id=\"taggedArticles\"><div class=\"taggedArticles row\"><h1>Analyzed Articles</h1><div class=\"listitem col-xs-12\" ng-repeat=\"article in taggedArticles\"><div class=\"article listitem col-xs-12\" ng-controller=\"SingleArticleCtrl\"><div class=\"col-xs-12\" ng-include=\"articleTemplate\"></div><div class=\"col-xs-12 tag\" ng-repeat=\"tag in article.ethicstags\" ng-controller=\"SingleTagCtrl\" ng-mouseenter=\"buttons=true\" ng-mouseleave=\"buttons=false\"><div ng-include=\"tagUrl\"></div></div></div></div></div></div><div class=\"container\" id=\"articles\"><div class=\"articleList row\"><h1>Add New article</h1><div class=\"col-xs-12 listitem\" ng-controller=\"NewArticleCtrl\"><div ng-include=\"articleForm\"></div></div><h1>Unanalyzed Articles</h1><div class=\"article listitem col-xs-12\" ng-repeat=\"article in articles\" ng-controller=\"SingleArticleCtrl\"><div class=\"col-xs-12\" ng-include=\"articleTemplate\"></div><div class=\"col-xs-12 col-sm-2 col-sm-offset-10 noDataWrapper\"><button class=\"btn btn-block btn-noData\" ng-controller=\"ArticleNoDataCtrl\" ng-click=\"noData()\">No Relevant Data</button></div></div></div></div><div class=\"container\"><div class=\"row\"><h1>Articles Marked As Having No Relevant Data</h1><div class=\"article listitem col-xs-12\" ng-repeat=\"article in noDataArticles\" ng-controller=\"ArticleRestoreCtrl\"><div class=\"col-xs-12 col-sm-10\"><ul><li><h3>{{article.title}}</h3></li><li><a href=\"{{article.url}}\" target=\"_newtab\">{{article.url}}</a></li><li>{{article.notes}}</li></ul></div><div class=\"col-sm-2 col-xs-12 text-center\"><button class=\"btn btn-block btn-add_analysis\" ng-click=\"noDataRestore()\">Restore</button></div></div></div></div><div ng-include=\"loginModal\"></div>');\n}]);\n})();\n"],"sourceRoot":"/source/"}