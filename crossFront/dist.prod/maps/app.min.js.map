{"version":3,"sources":["js/angular/app.js","js/angular/controllers/authControllers.js","js/angular/controllers/articleControllers.js","js/angular/controllers/appControllers.js","js/angular/services/validate.js","js/angular/services/services.js","js/angular/services/djangoAuth.js","includes/tag_form.js","includes/tag_base.js","includes/delete_modal.js","includes/article_form.js","includes/article_base.js","auth/verifyemail.js","auth/userprofile.js","auth/signup.js","auth/passwordresetconfirm.js","auth/passwordreset.js","auth/login.js","articles.js"],"names":["cross","angular","module","config","$resourceProvider","defaults","stripTrailingSlashes","$routeProvider","when","templateUrl","controller","resolve","authenticated","djangoAuth","authenticationStatus","otherwise","redirectTo","$scope","$cookies","model","getObject","$","extend","user","Validate","updateProfile","formData","errors","form_validation","$invalid","then","data","complete","error","$location","login","username","password","path","new_password1","new_password2","changePassword","email","register","password1","password2","$routeParams","verify","emailVerificationToken","success","failure","resetPassword","confirmReset","firstToken","passwordResetToken","$http","Article","Meta","csrftoken","cookie","articles","query","taggedArticles","queryTagged","value","response","companies","company","categories","ethicssubcategory","deleteModal","removeFromList","item","list","index","some","elem","i","id","splice","tagForm","articleTemplate","state","addTag","msg","cancel","articleSubmit","tempArticle","csrfmiddlewaretoken","update","articleID","article","JSON","stringify","readyForm","flipBack","tagCancel","articleForm","url","title","notes","save","push","modalContent","label","kind","itemDelete","element","array","crossList","modal","removeClass","remove","Tag","buttons","tagUrl","tagEdit","newTag","tag","grep","v","name","category","tag_type","subcategory","tagTypes","tag_types","tagSubmit","tagID","excerpt","tags","length","TagType","tagFormState","addTagType","newTagType","showNewTagType","$event","preventDefault","stopPropagation","submitTagType","console","log","respone","loadFacts","expires","first_name","last_name","profile","Date","setDate","getDate","putObject","$on","ev","current","previous","rejection","replace","logout","service","message","minlength","maxlength","required","more_messages","demo","check_more_messages","this","validation_messages","field","form","error_bin","messages","e","$error","special_message","deduped_messages","forEach","el","indexOf","substr","crossServices","factory","baseUrl","$resource","BaseUrl","method","params","isArray","tagTypeID","$q","$rootScope","API_URL","use_session","authPromise","request","args","get","headers","common","Authorization","deferred","defer","withCredentials","toUpperCase","X-CSRFToken","Access-Control-Allow-Credentials","bind","status","non_field_errors","reject","promise","more","key","put","$broadcast","foobar","getTime","uid","token","restrict","force","da","getAuthStatus","initialize","sessions","run","$templateCache"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n\nvar cross = angular.module('cross', [\n  'crossServices',\n  'ngRoute',\n  'ngCookies',\n  'ngSanitize',\n  'ngResource'\n]);\n\ncross.config(['$resourceProvider',function($resourceProvider) {\n  $resourceProvider.defaults.stripTrailingSlashes = false;\n}]);\n\ncross.config(['$routeProvider',\n  function($routeProvider) { \n    $routeProvider.\n      when('/', {\n        templateUrl: 'templates/articles.html',\n        controller: 'ArticleCtrl',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            // MAKE TRUE FOR PRODUCTION\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/login', {\n        templateUrl: 'templates/auth/login.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/userProfile', {\n        templateUrl: 'templates/auth/userprofile.html',\n        controller: 'ProfilePageCtrl',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            // MAKE TRUE FOR PRODUCTION\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/signUp', {\n        templateUrl: 'templates/auth/signup.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            // MAKE TRUE FOR PRODUCTION\n            return djangoAuth.authenticationStatus();\n          }]\n        }\n      })\n      .when('/verifyEmail/:emailVerificationToken', {\n        templateUrl: 'templates/auth/verifyemail.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/passwordReset', {\n        templateUrl: 'templates/auth/passwordreset.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .when('/passwordResetConfirm/:firstToken/:passwordResetToken', {\n        templateUrl: 'templates/auth/passwordresetconfirm.html',\n        resolve: {\n          authenticated: ['djangoAuth', function(djangoAuth){\n            return djangoAuth.authenticationStatus();\n          }],\n        }\n      })\n      .otherwise({\n        redirectTo: '/'\n      });\n}]);","angular.module('cross')\n.controller('ProfilePageCtrl',['$scope','$cookies',function ($scope,$cookies) {\n\n  $scope.model = $cookies.getObject('user') || $.extend({},$scope.user);\n}]);\n\n\nangular.module('cross')\n.controller('UserprofileCtrl', ['$scope','djangoAuth','Validate',function ($scope, djangoAuth, Validate) {\n    $scope.updateProfile = function(formData, model){\n      $scope.errors = [];\n\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.updateProfile(model)\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.error = data;\n        });\n      }\n    };\n  }]);\n\nangular.module('cross')\n.controller('LoginCtrl', ['$scope','$location','djangoAuth','Validate',function ($scope, $location, djangoAuth, Validate) {\n    $scope.login = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.login($scope.model.username, $scope.model.password)\n        .then(function(data){\n          // success case\n          $location.path(\"/\");\n        },function(data){\n          // error case\n          $scope.errors = data;\n        });\n      }\n    };\n  }]);\n\nangular.module('cross')\n.controller('PasswordchangeCtrl', ['$scope','djangoAuth','Validate',function ($scope, djangoAuth, Validate) {\n    $scope.model = {'new_password1':'','new_password2':''};\n    $scope.complete = false;\n    $scope.changePassword = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.changePassword($scope.model.new_password1, $scope.model.new_password2)\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.errors = data;\n        });\n      }\n    };\n  }]);\n\n\nangular.module('cross')\n.controller('RegisterCtrl', ['$scope','djangoAuth','Validate',function ($scope, djangoAuth, Validate) {\n    $scope.model = {'email':'','password':''};\n    $scope.complete = false;\n    $scope.register = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.register(\n            $scope.model.username,\n            $scope.model.password1,\n            $scope.model.password2,\n            $scope.model.email\n        )\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.errors = data;\n        });\n      }\n    }\n  }]);\n\nangular.module('cross')\n.controller('VerifyemailCtrl', ['$scope','$routeParams','djangoAuth',function ($scope, $routeParams, djangoAuth) {\n    djangoAuth.verify($routeParams.emailVerificationToken).then(function(data){\n      $scope.success = true;\n    },function(data){\n      $scope.failure = false;\n    });\n  }]);\n\nangular.module('cross')\n.controller('PasswordresetCtrl', ['$scope','djangoAuth','Validate',function ($scope, djangoAuth, Validate) {\n    $scope.model = {'email':''};\n    $scope.complete = false;\n    $scope.resetPassword = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.resetPassword($scope.model.email)\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.errors = data;\n        });\n      }\n    };\n  }]);\n\nangular.module('cross')\n.controller('UserprofileCtrl', ['$scope','djangoAuth','Validate',function ($scope, djangoAuth, Validate) {\n    $scope.complete = false;\n    $scope.updateProfile = function(formData, model){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.updateProfile(model)\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.error = data;\n        });\n      }\n    };\n  }]);\n\nangular.module('cross')\n.controller('PasswordresetconfirmCtrl', ['$scope','$routeParams','djangoAuth','Validate',function ($scope, $routeParams, djangoAuth, Validate) {\n    $scope.model = {'new_password1':'','new_password2':''};\n    $scope.complete = false;\n    $scope.confirmReset = function(formData){\n      $scope.errors = [];\n      Validate.form_validation(formData,$scope.errors);\n      if(!formData.$invalid){\n        djangoAuth.confirmReset($routeParams.firstToken, $routeParams.passwordResetToken, $scope.model.new_password1, $scope.model.new_password2)\n        .then(function(data){\n          // success case\n          $scope.complete = true;\n        },function(data){\n          // error case\n          $scope.errors = data;\n        });\n      }\n    };\n  }]);\n","angular.module('cross')\n.controller('ArticleCtrl',['$scope','$http','Article','Meta',function ($scope,$http,Article,Meta) {\n  $scope.csrftoken = $.cookie('csrftoken');\n  $scope.articles = Article.query();\n  $scope.taggedArticles = Article.queryTagged();\n\n  Meta.query(function (value, response) {\n    $scope.companies = value[0].company;\n    $scope.categories = value[1].ethicssubcategory;\n  });\n\n  $scope.deleteModal = 'templates/includes/delete_modal.html';\n\n  $scope.removeFromList = function (item, list) {\n    var index = 0;\n      list.some(function(elem, i) {\n        if (elem.id === item.id) {\n          index = i;\n          return true;\n        }\n      });\n      list.splice(index,1);\n  };\n}]);\n\n\n\nangular.module('cross')\n.controller('SingleArticleCtrl',['$scope', 'Article',function ($scope, Article) {\n\n  $scope.tagForm = 'templates/includes/tag_form.html';\n  $scope.articleTemplate = 'templates/includes/article_base.html';\n  $scope.state = {addTag:false};\n  $scope.error = {\n    error: false,\n    msg: \"\"\n  };\n  $scope.cancel = true;\n\n  $scope.articleSubmit = function () {\n    $scope.tempArticle.csrfmiddlewaretoken = $scope.csrftoken;\n\n    Article.update({articleID: $scope.article.id},$scope.tempArticle,function () {\n      $scope.articleTemplate = 'templates/includes/article_base.html';\n      $scope.article = $.extend({},$scope.tempArticle);\n    },function (response) {\n      $scope.error.msg = JSON.stringify(response.data);\n      $scope.error.error = true;\n    });\n  };\n\n  $scope.readyForm = function() {\n    $scope.tempArticle = $.extend({},$scope.article);\n    $scope.articleTemplate = 'templates/includes/article_form.html';\n  };\n\n  $scope.flipBack = function () {\n    $scope.articleTemplate='templates/includes/article_base.html';\n  }; \n\n  $scope.tagCancel = function () {\n    $scope.state.addTag = false;\n  };\n\n}]);\n\nangular.module('cross')\n.controller('NewArticleCtrl',['$scope','Article',function ($scope, Article) {\n  $scope.articleForm = 'templates/includes/article_form.html';\n  $scope.error = {error: false,\n                  msg: \"\"};\n  $scope.success = {success: false,\n                    msg: \"Your article has been sucessfully submitted\"};\n\n  $scope.tempArticle = {\n    id: 0,\n    url: \"\",\n    title: \"\",\n    notes: \"\"\n  };\n\n  $scope.articleSubmit = function () {\n    $scope.tempArticle.csrfmiddlewaretoken = $scope.csrftoken;\n\n    Article.save({articleID:'new'},$scope.tempArticle,function (value, response) {\n      $scope.articles.push(value);\n      $scope.tempArticle = {\n        id: 0,\n        url: \"\",\n        title: \"\",\n        notes: \"\"\n      };\n      $scope.error.error = false;\n      $scope.success.success = true;\n    },function (response) {\n      $scope.error.msg = JSON.stringify(response.data);\n      $scope.error.error = true;\n      $scope.success.success = false;\n    });\n  };\n\n\n}]);\n\nangular.module('cross')\n.controller('ArticleDeleteCtrl',['$scope','Article',function ($scope,Article) {\n  $scope.modalContent = {\n    id: 'modal-article-' + $scope.article.id,\n    label: 'modalLabel-article-' + $scope.article.id,\n    kind: 'Article',\n    title: $scope.article.title,\n    msg: 'This will not only remove the article, but any associated tags as well.  This cannot be undone'\n  };\n\n  $scope.itemDelete = function () {\n    $scope.article.csrfmiddlewaretoken = $scope.csrftoken;\n\n    Article.delete({articleID: $scope.article.id},function () {\n      if ($scope.articles.some(function (element, index, array) { return element.id === $scope.article.id; })) {\n        $scope.removeFromList($scope.article,$scope.articles);\n      } else {\n        $scope.removeFromList($scope.article,$scope.crossList);\n      }\n      \n\n      $('myModal' + $scope.article.id).modal('toggle');\n      $('body').removeClass('modal-open');\n      $('.modal-backdrop').remove();\n    });\n  };\n}]);\n\nangular.module('cross')\n.controller('SingleTagCtrl',['$scope','Tag',function ($scope,Tag) {\n  $scope.buttons = false;\n  $scope.tagUrl = 'templates/includes/tag_base.html';\n\n  $scope.tagEdit = function () {\n    \n    $scope.tagUrl = 'templates/includes/tag_form.html';\n    $scope.newTag = $.extend({},$scope.tag);\n    $scope.newTag.company = $.grep($scope.companies,function(v) {return v.name === $scope.newTag.company;})[0].id;\n    var category = $.grep($scope.categories,function(v) {return v.name === $scope.newTag.tag_type.subcategory;})[0];\n    $scope.newTag.subcategory = category.id;\n    $scope.tagTypes = category.tag_types;\n    $scope.newTag.tag_type = $scope.tag.tag_type.id;\n  };\n\n  $scope.tagCancel = function () {\n    \n    $scope.tagUrl = 'templates/includes/tag_base.html';\n\n  };\n\n  $scope.tagSubmit = function () {\n    $scope.newTag.article = $scope.article.id;\n\n    Tag.update({tagID:$scope.tag.id},$scope.newTag,function (value, response) {\n\n      // Replace element IDs with actual names\n      value.company = $.grep($scope.companies,function(v) {return v.id === value.company;})[0].name;\n      var category = $.grep($scope.categories,function(v) {return v.id === $scope.newTag.subcategory;})[0];\n\n      value.tag_type = {\n        name: $.grep(category.tag_types, function(v) {return v.id === value.tag_type;})[0].name,\n        subcategory: category.name,\n        id: value.tag_type\n      };\n\n      $scope.tag = $.extend({},value);\n      $scope.error.error = false;\n\n      $scope.tagUrl = 'templates/includes/tag_base.html';\n\n    }, function (response) {\n      $scope.error.msg = JSON.stringify(response.data);\n      $scope.error.error = true;\n    });\n  };\n\n}]);\n\nangular.module('cross')\n.controller('NewTagCtrl',['$scope','Tag',function ($scope,Tag) {\n  $scope.newTag = {\n    company: \"\",\n    subcategory: \"\",\n    tag_type: \"\",\n    excerpt: \"\",\n    article: $scope.article.id\n  };\n\n  $scope.tagSubmit = function () {\n    $scope.newTag.csrfmiddlewaretoken = $scope.csrftoken;\n\n    Tag.save({tagID: 'new'},$scope.newTag,function (value,response) {\n      $scope.article.tags = $scope.article.tags || [];\n\n      // Replace element IDs with actual names\n      value.company = $.grep($scope.companies,function(v) {return v.id === value.company;})[0].name;\n      var category = $.grep($scope.categories,function(v) {return v.id === $scope.newTag.subcategory;})[0];\n\n      value.tag_type = {\n        name: $.grep(category.tag_types, function(v) {return v.id === value.tag_type;})[0].name,\n        subcategory: category.name,\n        id: value.tag_type\n      };\n\n      $scope.article.tags.push(value);\n      $scope.state.addTag = false;\n      $scope.error.error = false;\n\n      //if the article is in the Unanalyzed list, move it to the analyzed list\n      if($scope.article.tags.length === 1) {\n        $scope.taggedArticles.push($scope.article);\n        $scope.removeFromList($scope.article,$scope.articles);\n      }\n    },function (response) {\n      $scope.error.msg = JSON.stringify(response.data);\n      $scope.error.error = true;\n    });   \n  };\n\n  \n\n}]);\n\nangular.module('cross')\n.controller('TagFormCtrl',['$scope','TagType',function ($scope,TagType) {\n  $scope.tagFormState = {\n    addTagType: false\n  };\n\n  $scope.newTagType = {\n    name: ''\n  };\n\n  // Shows the form to add new Tag Type\n  $scope.showNewTagType = function ($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n\n    $scope.tagFormState.addTagType = !$scope.tagFormState.addTagType;\n  };\n\n  // Submit a New Tag Type\n  $scope.submitTagType = function ($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n\n    // Get the currently selected subcategory\n    $scope.newTagType.subcategory = $scope.newTag.subcategory;\n\n    console.log($scope.newTagType);\n\n    // Send the new TagType to server\n    TagType.save($scope.newTagType,function (value, respone) {\n      console.log(value);\n\n      // Get index of current subcategory\n      var index = 0;\n      $scope.categories.some(function(elem, i) {\n        if (elem.id === $scope.newTag.subcategory) {\n          index = i;\n          return true;\n        }\n      });\n\n      // Add the new Tag Type to the current category list\n      $scope.categories[index].tag_types.push(value);\n\n      // Set the form to the new TagTpe\n      $scope.newTag.tag_type = value.id;\n\n      // Reset the add Tag Type form to invisible\n      $scope.tagFormState.addTagType = false;\n    },function (response) {\n      console.log(response.data);\n      $scope.error.msg = JSON.stringify(response.data);\n      $scope.error.error = true;\n    });\n  };\n\n  // Switches to the appropriate set of TagTypes when an ethical category is selected\n  $scope.loadFacts = function () {\n    $scope.tagTypes = $.grep($scope.categories,function(v) {return v.id === $scope.newTag.subcategory;})[0].tag_types;\n  };\n\n}]);\n\nangular.module('cross')\n.controller('DeleteTagCtrl',['$scope','Tag',function ($scope,Tag) {\n  $scope.modalContent = {\n    id: 'modal-cross-' + $scope.article.id + '-' + $scope.tag.id,\n    label: 'modalLabel-cross-' + $scope.article.id + '-' + $scope.tag.id,\n    kind: 'Tag',\n    title: $scope.tag.tag_type.name + \" on \" + $scope.article.title,\n    msg: 'This cannot be undone'\n  };\n\n  $scope.itemDelete = function () {\n\n    Tag.delete({tagID:$scope.tag.id}, function (value,response) {\n      $scope.removeFromList($scope.tag,$scope.article.tags);\n      if ($scope.article.tags.length === 0) {\n        $scope.removeFromList($scope.article,$scope.taggedArticles);\n        $scope.articles.push($scope.article);\n      }\n\n      $('myModal' + $scope.article.id).modal('toggle');\n      $('body').removeClass('modal-open');\n      $('.modal-backdrop').remove();\n    });\n  };\n}]);","'use strict';\n\nangular.module('cross')\n.controller('BodyCtrl',['$scope','djangoAuth','$location','$cookies',function ($scope,djangoAuth,$location,$cookies) {\n  // Variable to hold the cookie expiration date, which is currently set to one day\n  var expires = {};\n\n\n  // Assume user is not logged in until we hear otherwise\n  $scope.authenticated = false;\n  // Wait for the status of authentication, set scope var to true if it resolves\n  $scope.user = {'username':'','first_name':'','last_name':'','email':''};\n\n  // Wait for the status of authentication, set scope var to true if it resolves\n    djangoAuth.authenticationStatus(true).then(function(){\n        $scope.authenticated = true;\n        djangoAuth.profile().then(function(data){\n          expires = new Date();\n          expires.setDate(expires.getDate() + 1);\n\n          $scope.user = data;\n          $cookies.putObject('user',data,{'expires':expires});\n        });\n    });\n\n    // Wait and respond to the logout event.\n    $scope.$on('djangoAuth.logged_out', function(data) {\n      $scope.authenticated = false;\n      $scope.user = {'username':'','first_name':'','last_name':'','email':''};\n    });\n    // Wait and respond to the log in event.\n    $scope.$on('djangoAuth.logged_in', function(data) {\n      $scope.authenticated = true;\n\n      djangoAuth.profile().then(function(data) {\n        expires = new Date();\n        expires.setDate(expires.getDate() + 1);\n\n        $scope.user = data;\n        $cookies.putObject('user',data,{'expires':expires});\n      });\n    });\n\n    // If the user attempts to access a restricted page, redirect them back to the main page.\n    $scope.$on('$routeChangeError', function(ev, current, previous, rejection){\n      console.error(\"Unable to change routes.  Error: \", rejection);\n      $location.path('/login').replace();\n    });\n\n    $scope.logout = function(){\n      djangoAuth.logout();\n    };\n\n}]);\n","'use strict';\n\nangular.module('cross')\n  .service('Validate', [function Validate() {\n    return {\n        'message': {\n            'minlength': 'This value is not long enough.',\n            'maxlength': 'This value is too long.',\n            'email': 'A properly formatted email address is required.',\n            'required': 'This field is required.'\n        },\n        'more_messages': {\n            'demo': {\n                'required': 'Here is a sample alternative required message.'\n            }\n        },\n        'check_more_messages': function(name,error){\n            return (this.more_messages[name] || [])[error] || null;\n        },\n        validation_messages: function(field,form,error_bin){\n            var messages = [];\n            for(var e in form[field].$error){\n                if(form[field].$error[e]){\n                    var special_message = this.check_more_messages(field,e);\n                    if(special_message){\n                        messages.push(special_message);\n                    }else if(this.message[e]){\n                        messages.push(this.message[e]);\n                    }else{\n                        messages.push(\"Error: \" + e);\n                    }\n                }\n            }\n            var deduped_messages = [];\n            angular.forEach(messages, function(el, i){\n                if(deduped_messages.indexOf(el) === -1) deduped_messages.push(el);\n            });\n            if(error_bin){\n                error_bin[field] = deduped_messages;\n            }\n        },\n        'form_validation': function(form,error_bin){\n            for(var field in form){\n                if(field.substr(0,1) != \"$\"){\n                    this.validation_messages(field,form,error_bin);\n                }\n            }\n        }\n    };\n}]);","var crossServices = angular.module('crossServices',['ngResource']);\n\n// use for setting the API endpoint location\ncrossServices.factory('BaseUrl', [function () {\n  var baseUrl = 'http://api.axiologue.org/';\n\n  return baseUrl;\n}]);\n\n// For making Article-related API calls\ncrossServices.factory('Article',['$resource', 'BaseUrl',\n  function ($resource, BaseUrl){\n    return $resource(BaseUrl + 'tags/articles/:articleID/', {}, {\n      query: {method:'GET', params:{articleID:'untagged'}, isArray:true},\n      queryTagged: {method:'GET', params:{articleID:'tagged'}, isArray:true},\n      update: {method: 'PUT'}\n  });\n}]);\n\n// For making tag-related API calls\ncrossServices.factory('Tag',['$resource', 'BaseUrl',\n  function ($resource, BaseUrl) {\n    return $resource(BaseUrl + 'tags/tags/:tagID/',{},{\n      query: {method:'GET',params:{tagID:'list'},isArray:true},\n      update: {method: 'PUT'}\n    });\n}]);\n\n// For getting company and ethics lists, used in form-making\ncrossServices.factory('Meta',['$resource', 'BaseUrl',\n  function ($resource, BaseUrl) {\n    return $resource(BaseUrl + 'tags/formMeta/',{},{\n      query: {method:'GET',params:{},isArray:true},\n    });\n}]);\n\n// For managing Tag Types\ncrossServices.factory('TagType',['$resource', 'BaseUrl',\n  function ($resource, BaseUrl) {\n    return $resource(BaseUrl + 'tags/tag-types/:tagTypeID/',{},{\n      save: {method:'POST',params:{tagTypeID:'new'}},\n    });\n}]);","'use strict';\n\nangular.module('cross')\n  .service('djangoAuth', [\n        '$q',\n        '$http',\n        '$cookies',\n        '$rootScope',\n        'BaseUrl',\n        function djangoAuth($q, $http, $cookies, $rootScope,BaseUrl) {\n    // AngularJS will instantiate a singleton by calling \"new\" on this function\n    var service = {\n        /* START CUSTOMIZATION HERE */\n        // Change this to point to your Django REST Auth API\n        // e.g. /api/rest-auth  (DO NOT INCLUDE ENDING SLASH)\n        'API_URL': BaseUrl + 'rest-auth',\n        // Set use_session to true to use Django sessions to store security token.\n        // Set use_session to false to store the security token locally and transmit it as a custom header.\n        'use_session': false,\n        /* END OF CUSTOMIZATION */\n        'authenticated': null,\n        'authPromise': null,\n        'request': function(args) {\n            // Let's retrieve the token from the cookie, if available\n            if($cookies.get('token')){\n                $http.defaults.headers.common.Authorization = 'Token ' + $cookies.get('token');\n            }\n            // Continue\n            params = args.params || {};\n            args = args || {};\n            var deferred = $q.defer(),\n                url = this.API_URL + args.url,\n                method = args.method || \"GET\",\n                params = params,\n                data = args.data || {};\n            // Fire the request, as configured.\n            $http({\n                url: url,\n                withCredentials: this.use_session,\n                method: method.toUpperCase(),\n                headers: {'X-CSRFToken': $cookies.csrftoken,\n                          'Access-Control-Allow-Credentials': 'true'},\n                params: params,\n                data: data\n            })\n            .success(angular.bind(this,function(data, status, headers, config) {\n                deferred.resolve(data, status);\n            }))\n            .error(angular.bind(this,function(data, status, headers, config) {\n                console.log(\"error syncing with: \" + url);\n                // Set request status\n                if(data){\n                    data.status = status;\n                }\n                if(status === 0){\n                    if(data === \"\"){\n                        data = {};\n                        data.status = 0;\n                        data.non_field_errors = [\"Could not connect. Please try again.\"];\n                    }\n                    // or if the data is null, then there was a timeout.\n                    if(data === null){\n                        // Inject a non field error alerting the user\n                        // that there's been a timeout error.\n                        data = {};\n                        data.status = 0;\n                        data.non_field_errors = [\"Server timed out. Please try again.\"];\n                    }\n                }\n                deferred.reject(data, status, headers, config);\n            }));\n            return deferred.promise;\n        },\n        'register': function(username,password1,password2,email,more){\n            var data = {\n                'username':username,\n                'password1':password1,\n                'password2':password2,\n                'email':email\n            };\n            data = angular.extend(data,more);\n            return this.request({\n                'method': \"POST\",\n                'url': \"/registration/\",\n                'data' :data\n            });\n        },\n        'login': function(username,password){\n            var djangoAuth = this;\n            return this.request({\n                'method': \"POST\",\n                'url': \"/login/\",\n                'data':{\n                    'username':username,\n                    'password':password,\n                }\n            }).then(function(data){\n                if(!djangoAuth.use_session){\n                    var expires = new Date();\n                    expires.setDate(expires.getDate() + 1);\n                    $http.defaults.headers.common.Authorization = 'Token ' + data.key;\n                    $cookies.put('token',data.key,{'expires':expires});\n                }\n                djangoAuth.authenticated = true;\n                $rootScope.$broadcast(\"djangoAuth.logged_in\", data);\n            });\n        },\n        'logout': function(){\n            var djangoAuth = this;\n            return this.request({\n                'method': \"POST\",\n                'url': \"/logout/\"\n            }).then(function(data){\n                delete $http.defaults.headers.common.Authorization;\n                $cookies.remove('token');\n                $cookies.remove('user')\n                djangoAuth.authenticated = false;\n                $rootScope.$broadcast(\"djangoAuth.logged_out\");\n            });\n        },\n        'changePassword': function(password1,password2){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/change/\",\n                'data':{\n                    'new_password1':password1,\n                    'new_password2':password2\n                }\n            });\n        },\n        'resetPassword': function(email){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/reset/\",\n                'data':{\n                    'email':email\n                }\n            });\n        },\n        'profile': function(){\n            return this.request({\n                'method': \"GET\",\n                'url': \"/user/\",\n                'params': { 'foobar': new Date().getTime() }\n            }); \n        },\n        'updateProfile': function(data){\n            return this.request({\n                'method': \"PATCH\",\n                'url': \"/user/\",\n                'data':data\n            }); \n        },\n        'verify': function(key){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/registration/verify-email/\",\n                'data': {'key': key} \n            });            \n        },\n        'confirmReset': function(uid,token,password1,password2){\n            return this.request({\n                'method': \"POST\",\n                'url': \"/password/reset/confirm/\",\n                'data':{\n                    'uid': uid,\n                    'token': token,\n                    'new_password1':password1,\n                    'new_password2':password2\n                }\n            });\n        },\n        'authenticationStatus': function(restrict, force){\n            // Set restrict to true to reject the promise if not logged in\n            // Set to false or omit to resolve when status is known\n            // Set force to true to ignore stored value and query API\n            restrict = restrict || false;\n            force = force || false;\n            if(this.authPromise === null || force){\n                this.authPromise = this.request({\n                    'method': \"GET\",\n                    'url': \"/user/\"\n                });\n            }\n            var da = this;\n            var getAuthStatus = $q.defer();\n            if(this.authenticated !== null && !force){\n                // We have a stored value which means we can pass it back right away.\n                if(this.authenticated === false && restrict){\n                    getAuthStatus.reject(\"User is not logged in.\");\n                }else{\n                    getAuthStatus.resolve();\n                }\n            }else{\n                // There isn't a stored value, or we're forcing a request back to\n                // the API to get the authentication status.\n                this.authPromise.then(function(){\n                    da.authenticated = true;\n                    getAuthStatus.resolve();\n                },function(){\n                    da.authenticated = false;\n                    if(restrict){\n                        getAuthStatus.reject(\"User is not logged in.\");\n                    }else{\n                        getAuthStatus.resolve();\n                    }\n                });\n            }\n            return getAuthStatus.promise;\n        },\n        'initialize': function(url, sessions){\n            this.API_URL = url;\n            this.use_session = sessions;\n            return this.authenticationStatus();\n        }\n\n    };\n    return service;\n  }]);\n\n\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/includes/tag_form.html',\n    '<div class=\"col-xs-12 listitem\" ng-controller=\"TagFormCtrl\"><h3 class=\"text-danger\" ng-show=\"error.error\">{{error.msg}}</h3><form ng-submit=\"tagSubmit()\"><div class=\"form-group\"><label for=\"{{\\'companies\\' + article.id}}\">COMPANY:</label><select ng-model=\"newTag.company\" class=\"form-control\" ng-options=\"company.id as company.name for company in companies\"><option value=\"\">---- Select Company ----</option></select></div><div class=\"form-group\"><label for=\"{{\\'companies\\' + article.id}}\">CATEGORY:</label><select ng-model=\"newTag.subcategory\" class=\"form-control\" ng-options=\"category.id as category.name group by category.category for category in categories\" ng-change=\"loadFacts()\"><option value=\"\">---- Select Ethics Category ----</option></select></div><div class=\"form-group\"><label for=\"{{\\'companies\\' + article.id}}\">TAG TYPE:</label><select ng-model=\"newTag.tag_type\" class=\"form-control\" ng-options=\"tagType.id as tagType.name for tagType in tagTypes\"><option value=\"\">---- Select Tag Type ----</option></select><p class=\"help-block\">Don\\'t see the tag you want? <a ng-click=\"showNewTagType($event)\">Add it!</a></p></div><div class=\"form-group\" ng-show=\"tagFormState.addTagType\"><label for=\"{{\\'newTagType\\' + article.id}}\">NEW TAG TYPE:</label><input ng-model=\"newTagType.name\" class=\"form-control\" placeholder=\"Enter Your New Tag Here\"> <button class=\"btn btn-edit btn-block\" ng-click=\"submitTagType($event)\">Add Tag Type</button></div><div class=\"form-group\"><label for=\"{{\\'crossNotes\\' + article.id}}\">EXCERPT:</label><textarea rows=\"3\" ng-model=\"newTag.excerpt\" name=\"notes\" id=\"{{\\'excerpt\\' + article.id}}\" class=\"form-control\"></textarea></div><input type=\"submit\" class=\"btn btn-primary btn-block\" value=\"Submit\"></form><button class=\"btn btn-delete btn-block\" ng-click=\"tagCancel()\">Cancel</button></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/includes/tag_base.html',\n    '<div class=\"col-xs-12 col-sm-10\"><dl><dt>{{tag.tag_type.name}}</dt><dd>{{tag.company}} {{tag.product}} (category: {{tag.tag_type.subcategory}}) <span class=\"score\">{{tag.value}}</span></dd><dd><span class=\"text-muted\">\"{{tag.excerpt}}\"</span></dd></dl></div><div class=\"col-xs-12 col-sm-2 tagButtons\" ng-show=\"buttons\"><button class=\"btn btn-sm btn-edit\" ng-click=\"tagEdit()\">Edit</button> <button class=\"btn btn-sm btn-delete\" data-toggle=\"modal\" data-target=\"{{\\'#modal-cross-\\' + article.id + \\'-\\' + tag.id}}\">Delete</button></div><div ng-include=\"deleteModal\" ng-controller=\"DeleteTagCtrl\"></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/includes/delete_modal.html',\n    '<div id=\"{{modalContent.id}}\" class=\"modal fade\" tab-index=\"-1\" role=\"dialog\" aria-labelledby=\"{{\\'#\\' + modalContent.label}}\"><div class=\"modal-dialog\" role=\"document\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><h4 class=\"modal-title\" id=\"{{modalContent.label}}\">Delete {{modalContent.kind}}?</h4></div><div class=\"modal-body\"><p>Are you sure you want to delete the {{modalContent.kind.toLowerCase()}} <em>{{modalContent.title}}</em></p><p>{{modalContent.msg}}</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button> <button type=\"button\" class=\"btn btn-primary\" ng-click=\"itemDelete()\">Delete</button></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/includes/article_form.html',\n    '<div class=\"listitem\"><h3 class=\"text-danger\" ng-show=\"error.error\">{{error.msg}}</h3><h3 class=\"text-success\" ng-show=\"success.success\">{{success.msg}}</h3><form ng-submit=\"articleSubmit()\"><div class=\"form-group\"><label for=\"{{\\'title\\' + article.id}}\">TITLE:</label><input type=\"text\" id=\"{{\\'title\\' + article.id}}\" ng-model=\"tempArticle.title\" name=\"title\" class=\"form-control\"></div><div class=\"form-group\"><label for=\"{{\\'url\\' + article.id}}\">URL:</label><input type=\"text\" id=\"{{\\'url\\' + article.id}}\" ng-model=\"tempArticle.url\" name=\"url\" class=\"form-control\"></div><div class=\"form-group\"><label for=\"{{\\'notes\\' + article.id}}\">NOTES:</label><textarea rows=\"3\" ng-model=\"tempArticle.notes\" name=\"notes\" id=\"{{\\'notes\\' + article.id}}\" class=\"form-control\"></textarea></div><input type=\"submit\" class=\"btn btn-primary btn-block\" value=\"Submit\"></form><button class=\"btn btn-delete btn-block\" ng-click=\"flipBack()\" ng-show=\"cancel\">Cancel</button></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/includes/article_base.html',\n    '<div class=\"col-xs-12 col-sm-10\"><ul><li><h3>{{article.title}}</h3></li><li><a href=\"{{article.url}}\" target=\"_newtab\">{{article.url}}</a></li><li>{{article.notes}}</li></ul></div><div class=\"col-sm-2 col-xs-12 text-center\"><button class=\"btn btn-block btn-add_analysis\" ng-click=\"state.addTag=!state.addTag\">Add Tag</button> <button class=\"btn btn-block btn-edit\" ng-click=\"readyForm()\">Edit</button> <button class=\"btn btn-block btn-delete\" data-toggle=\"modal\" data-target=\"{{\\'#modal-article-\\' + article.id}}\">Delete</button></div><div ng-include=\"deleteModal\" ng-controller=\"ArticleDeleteCtrl\"></div><div ng-include=\"tagForm\" ng-controller=\"NewTagCtrl\" ng-show=\"state.addTag\"></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/verifyemail.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"verifyEmail_view\" ng-controller=\"VerifyemailCtrl\"><div ng-if=\"success\" class=\"alert alert-success\">You have successfully verified your email address.</div><div ng-if=\"failure\" class=\"alert alert-warning\">Sorry, there\\'s been an error.</div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/userprofile.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><h2 class=\"light-header\">Edit Profile Information</h2><div id=\"userProfile_view\" ng-controller=\"UserprofileCtrl\"><div ng-if=\"complete == false\"><form role=\"form\" ng-if=\"authenticated\" name=\"userProfileForm\" ng-submit=\"updateProfile(userProfileForm, model)\" novalidate><div class=\"form-group\"><label for=\"id_first_name\">First Name</label><input name=\"first_name\" id=\"id_first_name\" class=\"form-control\" type=\"text\" ng-model=\"model.first_name\" placeholder=\"First Name\"></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.first_name\">{{error}}</div><div class=\"form-group\"><label for=\"id_last_name\">Last Name</label><input name=\"last_name\" id=\"id_last_name\" class=\"form-control\" type=\"text\" ng-model=\"model.last_name\" placeholder=\"Last Name\"></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.last_name\">{{error}}</div><div class=\"form-group\"><label for=\"id_email\">Email</label><input name=\"email\" id=\"id_email\" class=\"form-control\" type=\"email\" ng-model=\"model.email\" placeholder=\"Email\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><button type=\"submit\" ng-show=\"authenticated\" class=\"btn btn-primary\">Update Profile</button></form><div class=\"alert alert-warning\" ng-if=\"authenticated == false\">You need to be logged in to do this.</div></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">You have updated your profile.</div></div></div><div id=\"passwordChange_view\" ng-controller=\"PasswordchangeCtrl\"><h2 class=\"light-header\">Change Password</h2><div ng-if=\"complete == false\"><form role=\"form\" ng-submit=\"changePassword(changePasswordForm)\" name=\"changePasswordForm\" ng-if=\"authenticated\" novalidate><div class=\"form-group\"><label for=\"id_password1\">New Password</label><input name=\"new_password1\" id=\"id_password1\" type=\"password\" ng-model=\"model.new_password1\" placeholder=\"New Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.new_password1\">{{error}}</div><div class=\"form-group\"><label for=\"id_password2\">Repeat Password</label><input name=\"new_password2\" id=\"id_password2\" type=\"password\" ng-model=\"model.new_password2\" placeholder=\"Repeat Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.new_password2\">{{error}}</div><button ng-show=\"authenticated\" type=\"submit\" class=\"btn btn-primary\">Change Password</button></form><div class=\"alert alert-warning\" ng-if=\"authenticated != true\">You need to be logged in to do this!</div></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">You have changed your password.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/signup.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"register_view\" ng-controller=\"RegisterCtrl\"><div ng-if=\"complete == false\"><h3 class=\"light-header\">Please Enter Your Registration Information:</h3><form role=\"form\" ng-if=\"authenticated != true\" name=\"registerForm\" ng-submit=\"register(registerForm)\" novalidate><div class=\"form-group\"><label class=\"sr-only\" for=\"id_first_name\">First Name (optional)</label><input name=\"first_name\" id=\"id_first_name\" class=\"form-control\" type=\"first_name\" ng-model=\"model.first_name\" placeholder=\"First Name\" required></div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_last_name\">Last Name (optional)</label><input name=\"last_name\" id=\"id_last_name\" class=\"form-control\" type=\"last_name\" ng-model=\"model.last_name\" placeholder=\"Last Name\" required></div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_username\">Username</label><input name=\"username\" id=\"id_username\" class=\"form-control\" type=\"username\" ng-model=\"model.username\" placeholder=\"Username\" required></div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_email\">Email</label><input name=\"email\" id=\"id_email\" class=\"form-control\" type=\"email\" ng-model=\"model.email\" placeholder=\"Email\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><hr><div class=\"form-group\"><label class=\"sr-only\" for=\"id_password\">Password</label><input name=\"password1\" id=\"id_password1\" class=\"form-control\" type=\"password\" ng-model=\"model.password1\" placeholder=\"Password\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password1\">{{error}}</div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_password\">Repeat Password</label><input name=\"password\" id=\"id_password2\" class=\"form-control\" type=\"password\" ng-model=\"model.password2\" placeholder=\"Repeat Password\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password2\">{{error}}</div><button ng-hide=\"authenticated\" type=\"submit\" class=\"btn btn-block btn-auth-orange\">Sign Up!</button></form><p ng-if=\"authenticated\">You are already logged in! You don\\'t need to register.</p></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">Great! You\\'ve just registered. You should receive an email shortly with instructions on how to activate your account.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/passwordresetconfirm.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"passwordResetConfirm_view\" ng-controller=\"PasswordresetconfirmCtrl\"><div ng-hide=\"complete\"><form role=\"form\" ng-hide=\"authenticated\" ng-submit=\"confirmReset(confirmResetForm)\" name=\"confirmResetForm\" novalidate><div class=\"form-group\"><label for=\"id_password1\">New Password</label><input name=\"password1\" id=\"id_password1\" type=\"password\" ng-model=\"model.new_password1\" placeholder=\"New Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password1\">{{error}}</div><div class=\"form-group\"><label for=\"id_password2\">Repeat Password</label><input name=\"password2\" id=\"id_password2\" type=\"password\" ng-model=\"model.new_password2\" placeholder=\"Repeat Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password2\">{{error}}</div><button type=\"submit\" ng-hide=\"authenticated\" class=\"btn btn-primary\">Reset Password</button></form><p ng-show=\"authenticated\">You are already logged in! You don\\'t need to reset your password.</p></div><div ng-show=\"complete\"><div class=\"alert alert-success\">You have changed your password.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/passwordreset.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\"><div id=\"passwordReset_view\" ng-controller=\"PasswordresetCtrl\"><div ng-if=\"complete == false\"><form role=\"form\" ng-if=\"authenticated != true\" name=\"passwordResetForm\" ng-submit=\"resetPassword(passwordResetForm)\" novalidate><div class=\"form-group\"><label for=\"id_email\">Email</label><input name=\"email\" id=\"id_email\" type=\"text\" ng-model=\"model.email\" placeholder=\"Email\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><button ng-hide=\"authenticated\" type=\"submit\" class=\"btn btn-primary\">Reset Password</button></form><p ng-if=\"authenticated\">You are already logged in! You don\\'t need to reset your password.</p></div><div ng-if=\"complete == true\"><div class=\"alert alert-success\">You should receive an email shortly with instructions on how to reset your account password.</div></div></div></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/auth/login.html',\n    '<div class=\"container\"><div class=\"row v-center\"><div class=\"col-xs-12 col-sm-offset-2 col-sm-8 col-md-offset-3 col-md-6\">\\'<div id=\"login_view\" ng-controller=\"LoginCtrl\"><h4 class=\"light-header\">Please Log In</h4><form role=\"form\" ng-submit=\"login(loginForm)\" name=\"loginForm\" novalidate><div class=\"form-group\"><label class=\"sr-only\" for=\"id_username\">Username</label><input name=\"username\" id=\"id_username\" type=\"text\" ng-model=\"model.username\" placeholder=\"Username\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.email\">{{error}}</div><div class=\"form-group\"><label class=\"sr-only\" for=\"id_password\">Password</label><input name=\"password\" id=\"id_password\" type=\"password\" ng-model=\"model.password\" placeholder=\"Password\" class=\"form-control\" required></div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.username\">{{error}}</div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.password\">{{error}}</div><div class=\"alert alert-danger\" ng-repeat=\"error in errors.non_field_errors\">{{error}}</div><div class=\"alert alert-danger\" ng-if=\"error\">{{error}}</div><p><button type=\"submit\" class=\"btn btn-block btn-succes\">Submit</button></p></form><div><p>Forgot your password? Click <a href=\"#/passwordReset\">here</a></p></div></div><hr><h4>Don\\'t have an Axiologue account? Sign up below!</h4><a href=\"#/signUp\" class=\"btn btn-block btn-primary\">Sign Up</a></div></div></div>');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('cross');\n} catch (e) {\n  module = angular.module('cross', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('templates/articles.html',\n    '<div class=\"container\" id=\"taggedArticles\"><div class=\"taggedArticles row\"><h1>Analyzed Articles</h1><div class=\"listitem col-xs-12\" ng-repeat=\"article in taggedArticles\"><div class=\"article listitem col-xs-12\" ng-controller=\"SingleArticleCtrl\"><div class=\"col-xs-12\" ng-include=\"articleTemplate\"></div><div class=\"col-xs-12 tag\" ng-repeat=\"tag in article.tags\" ng-controller=\"SingleTagCtrl\" ng-mouseenter=\"buttons=true\" ng-mouseleave=\"buttons=false\"><div ng-include=\"tagUrl\"></div></div></div></div></div></div><div class=\"container\" id=\"articles\"><div class=\"articleList row\"><h1>Add New article</h1><div class=\"col-xs-12 listitem\" ng-controller=\"NewArticleCtrl\"><div ng-include=\"articleForm\"></div></div><h1>Unanalyzed Articles</h1><div class=\"article listitem col-xs-12\" ng-repeat=\"article in articles\" ng-controller=\"SingleArticleCtrl\"><div class=\"col-xs-12\" ng-include=\"articleTemplate\"></div></div></div></div>');\n}]);\n})();\n"],"sourceRoot":"/source/"}