[
    { "comment_0": "Output for FormMetaView test.  Access in Django test as self.output[1]"},
    [
        {
            "company": [
                {"name": "Adidas",
                 "id": 2},
                {"name": "New Balance",
                 "id": 3},
                {"name": "Nike",
                 "id": 1}
            ]
        },
        {
            "ethicssubcategory": [
                {
                    "name": "Carbon",
                    "id": 5,
                    "category": "Environment",
                    "tag_types": [
                        {

                            "name": "Factory produces extra 10 tons carbon",
                            "subcategory": "Carbon",
                            "id": 4
                        }
                    ]
                },
                {
                    "name": "Pollution",
                    "id": 3,
                    "category": "Environment",
                    "tag_types": []
                },
                {
                    "name": "Recycling",
                    "id": 4,
                    "category": "Environment",
                    "tag_types": [
                        {
                            "name": "Factory produces excessive waste",
                            "subcategory": "Recycling",
                            "id": 3
                        }
                    ]
                },
                {
                    "name": "Slave Labor",
                    "id": 1,
                    "category": "Labor",
                    "tag_types": [
                        {
                            "name": "No slave labor found for this company",
                            "subcategory": "Slave Labor",
                            "id": 2
                        },
                        {
                            "name": "Slave Labor found in factory producing company products",
                            "subcategory": "Slave Labor",
                            "id": 1
                        }
                    ]
                },
                {
                    "name": "Worker Safety",
                    "id": 2,
                    "category": "Labor",
                    "tag_types": [
                        {
                            "subcategory": "Worker Safety",
                            "name": "10% more worker accidents than global average",
                            "id": 5
                        }
                    ]
                }  
            ]
        }
    ],
    { "comment_1": "Output for ArticleNoTagView.  Access in Django test as self.output[3]"},
    [
        {
            "id": 2,
            "title": "Adidas Workers Rights",
            "url": "http://www.adidas-group.com/en/workersaftey",
            "notes": "Fictional Article Regarding Worker Safety",
            "added_by": 1
        },
        {
            "id": 3,
            "title": "Lots of Companies pollute",
            "url": "http://www.polluting.com/shoes",
            "notes": "Fictional Article with Lots of Information about Polluting",
            "added_by": 1
        }
    ],
    {"comment_2": "Output for ArticleWithTagView.  Access in Django test as self.output[5]"},
    [
        {
            "added_by": 1,
            "title": "Nike Releases Carbon",
            "url": "http://www.article-about-carbon/article/1/",
            "ethicstags": [
                {
                    "tag_type": {
                        "name": "Factory produces extra 10 tons carbon",
                        "subcategory": "Carbon",
                        "id": 4
                    },
                    "added_by": 1,
                    "value": null,
                    "excerpt": "Quote about Nike using carbon",
                    "company": "Nike",
                    "product": null,
                    "id": 2
                }
            ],
            "id": 1,
            "notes":  "Fictional placeholder article about wasteful manufacturing practices"
        }
    ],
    {"comment_3": "Output for new article from NewArticleView.  Access in Django test as self.output[7"},
    {
        "id": 5,
        "url": "http://www.newarticle.com",
        "title": "New Article!",
        "notes": "Article to test that article creation view works",
        "added_by": 1
    },
    {"comment_4": "Output for UpdateArticleView after changing object.  Access in Django test as self.output[9]"},
    {
        "added_by": 1,
        "url": "http://www.adidas-group.com/en/workersaftey",
        "id": 2,
        "title": "New Balance Workers Rights",
        "notes": "Fictional Article Regarding Worker Safety.  Updated from Adidas to New Balance"
    },
    {"comment_5": "Output for new EthicsTag from NewEthicsTagView.  Access in Django test as self.output[11]"},
    {
        "id": 4,
        "company": 2,
        "tag_type": 5,
        "article": 2,
        "excerpt": "Article excerpt that confirms tag type",
        "product": null,
        "value": null,
        "added_by": 1
    },
    {"comment_6": "Output for updated EthicsTag from UpdateEthicsTagView.  Access in Django tests as self.output[13]"},
    {
        "id": 2,
        "company": 1,
        "excerpt": "Different quote about Nike using carbon",
        "tag_type": 4,
        "article": 1,
        "product": null,
        "value": null,
        "added_by": 1
    },
    {"comment_7": "Output of new EthicsType from NewEthicsTypeView.  Access in Django tests as self.output[15]"},
    {
        "subcategory": 2,
        "name": "20% more worker accidents than the global average",
        "id": 6
    },
    {"comment_8": "Output of ArticleNoDataView.  Access in Django tests as self.output[17]"},
    [
        {
            "title": "This Has Nothing to do with the Ethics of Shoes",
            "url": "http://www.irrelevant.com/shoes",
            "metatags": [1],
            "id": 4,
            "notes": "Article that Exists to be Tagged as Irrelevant",
            "added_by": 1
        }
    ],
    {"comment_9": "Output of new MetaTag from the NoRelDataView.  Access in Django tests as self.output[19]"},
    {
        "article": 3,
        "tag_type": 1,
        "added_by": 1
    },
    {"comment_10": "Output of the EthicsProfileView.  Access in the Django tests as self.output[21]"},
    [
        {
            "category": "Environment",
            "sub": [
                {
                    "sub": "Carbon",
                    "prefs": [
                        {
                            "type": "Factory produces extra 10 tons carbon",
                            "id": 33,
                            "preference": 0.0
                        }
                    ]
                },
                {
                    "sub": "Pollution",
                    "prefs": []
                },
                {
                    "sub": "Recycling",
                    "prefs": [
                        {
                            "type": "Factory produces excessive waste",
                            "id": 32,
                            "preference": 0.0
                        }
                    ]
                }
            ]
        },
        {
            "category": "Labor",
            "sub": [
                {
                    "sub": "Slave Labor",
                    "prefs": [
                        {
                            "type": "Slave Labor found in factory producing company products",
                            "id": 35,
                            "preference": 0.0
                        },
                        {
                            "type": "No slave labor found for this company",
                            "id": 34,
                            "preference": 0.0
                        }
                    ]
                },
                {
                    "sub": "Worker Safety",
                    "prefs": [
                        {
                            "type": "10% more worker accidents than global average",
                            "id": 31,
                            "preference": 0.0
                        }
                    ]
                }
            ]
        }
    ],
    {"comment_11": "Output from get_company_score().  Access in the Django tests as self.output[23]"},
    {
        "overall": -2.0,
        "categories":
            [   
                { 
                    "category": "Environment",
                    "score": -2.0,
                    "id": 2,
                    "count":1,
                    "subcategories": [
                        {
                            "id": 5,
                            "subcategory": "Carbon",
                            "score": -2.0,
                            "count": 1,
                            "tags": [
                                {
                                    "count": 1,
                                    "score": -2.0,
                                    "tag_type": "Factory produces extra 10 tons carbon"
                                }
                            ]
                        },
                        {
                            "id": 3,
                            "subcategory": "Pollution",
                            "score": 0,
                            "tags": [],
                            "count": 0
                        },
                        {
                            "id": 4,
                            "subcategory": "Recycling",
                            "score": 0,
                            "tags": [],
                            "count": 0
                        }
                    ]
                },
                { 
                    "category": "Labor",
                    "score": 0,
                    "count":0,
                    "id": 1,
                    "subcategories": [
                        {
                            "id": 1,
                            "subcategory": "Slave Labor",
                            "score": 0,
                            "tags": [],
                            "count": 0
                        },
                        {
                            "id": 2,
                            "subcategory": "Worker Safety",
                            "score": 0,
                            "tags": [],
                            "count": 0
                        }
                    ]
                }
            ]
    },
    {"comment_12": "Output from QuestionAnswers view.  Access in DjangoTests as self.output[25]"},
    {
       "ethics": [
            {
                "name": "Environment",
                "tag_types": [
                    {
                        "subcategory": "Recycling",
                        "name": "Factory produces excessive waste",
                        "id": 3
                    },
                    {
                        "subcategory": "Carbon",
                        "name": "Factory produces extra 10 tons carbon",
                        "id": 4
                    }
                ]            
            },
            {
                "name": "Labor",
                "tag_types": [
                    {
                        "subcategory": "Worker Safety",
                        "name": "10% more worker accidents than global average",
                        "id": 5
                    },
                    {
                        "subcategory": "Slave Labor",
                        "name": "No slave labor found for this company",
                        "id": 2
                    },
                    {
                        "subcategory": "Slave Labor",
                        "name": "Slave Labor found in factory producing company products",
                        "id": 1
                    }
                ]
            }
        ],
        "answers": [
            {
                "answer": "Republican",
                "id": 1,
                "modifiers": {
                }
            },
            {
                "answer": "Democrat",
                "id": 2,
                "modifiers": {
                }
            },
            {
                "answer": "Other",
                "id": 3,
                "modifiers": {
                }
            }
        ],
        "question": {
            "question":  "What Political Party Are you Registered As?",
            "supplement": "" 
        }
    },
    {"comment_13": "Output for unfiltered ProductListView.  Access in Django tests as self.output[27]"},
    {
        "products": [
            {
                "name":"Classic Samba",
                "id": 3,
                "company": "Adidas"
            },
            {
                "name":"Air Jordans",
                "id": 2,
                "company": "Nike"
            },
            {
                "name":"Nike Flex RUN 2015",
                "id": 1,
                "company": "Nike"
            }
        ]
    },
    {"comment_15": "Output for ProductListView filtered by company=Nike.  Access in Django tests as self.output[29]"},
    {
        "products": [
            {
                "name":"Nike Flex RUN 2015",
                "id": 1,
                "company": "Nike"
            }
        ]
    },
    {"comment_17": "Output of ProductSerializer for ProductFetchView. Access in Django tests as self.output[31]"},
    {
        "name": "Nike Flex RUN 2015",
        "company": "Nike",
        "division": "Men",
        "price": "150.00",
        "category": "Running"
    }
]


